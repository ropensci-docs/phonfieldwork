[{"path":[]},{"path":"https://docs.ropensci.org/phonfieldwork/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to phonfieldwork","text":"filing issue, important thing include minimal reproducible example can quickly verify problem. please include: required packages package versions data code additional information put issue template.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/articles/data_manipulation_with_tidyverse.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Manipulating `phonfieldwork` data with `tidyverse`","text":"output tables phonfieldwork’s functions (e. g. textgrid_to_df(), eaf_to_df(), exb_to_df(), flextext_to_df() etc.) hard interpret since row separate morpheme/observation aother unit. order merge common representation use tidyverse functions (mainly dplyr tidyr packages). text help achieve results, better spend times learning data manipulation dplyr tidyr. tidyverse installed run: Let’s load package:","code":"install.packages(\"tidyverse\") library(\"tidyverse\")"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/data_manipulation_with_tidyverse.html","id":"textgrid--eaf--exb-formats","dir":"Articles","previous_headings":"","what":".TextGrid, .eaf, .exb formats","title":"Manipulating `phonfieldwork` data with `tidyverse`","text":"standard sound annotation formats consisnt tiers parallel annotation:  convert file R achieve something like : see table long format structure: observation row. can select first two rows filter() function, remove unnecessary columns select() function spread everything table pivot_wider() function:","code":"textgrid_to_df(\"s1/s1_all.TextGrid\") #>    id time_start  time_end      content tier     tier_name          source #> 1   1  0.0000000 0.4821542          tip    1        labels s1_all.TextGrid #> 4   1  0.0000000 0.4821542 1_s1_tip.wav    2 backup labels s1_all.TextGrid #> 7   1  0.0000000 0.1072426                 3               s1_all.TextGrid #> 8   2  0.1072426 0.1887230            ı    3               s1_all.TextGrid #> 9   3  0.1887230 0.4821542                 3               s1_all.TextGrid #> 2   2  0.4821542 0.9120635          tap    1        labels s1_all.TextGrid #> 5   2  0.4821542 0.9120635 2_s1_tap.wav    2 backup labels s1_all.TextGrid #> 10  4  0.4821542 0.5770552                 3               s1_all.TextGrid #> 11  5  0.5770552 0.6793392            æ    3               s1_all.TextGrid #> 12  6  0.6793392 0.9120635                 3               s1_all.TextGrid #> 3   3  0.9120635 1.3942177          top    1        labels s1_all.TextGrid #> 6   3  0.9120635 1.3942177 3_s1_top.wav    2 backup labels s1_all.TextGrid #> 13  7  0.9120635 1.0364661                 3               s1_all.TextGrid #> 14  8  1.0364661 1.1066780            ɒ    3               s1_all.TextGrid #> 15  9  1.1066780 1.3942177                 3               s1_all.TextGrid textgrid_to_df(\"s1/s1_all.TextGrid\") %>%    filter(tier %in% 1:2) %>%    select(-time_start, -time_end, -tier_name) %>%    pivot_wider(names_from = tier, values_from = content) #> # A tibble: 3 × 4 #>      id source          `1`   `2`          #>   <dbl> <chr>           <chr> <chr>        #> 1     1 s1_all.TextGrid tip   1_s1_tip.wav #> 2     2 s1_all.TextGrid tap   2_s1_tap.wav #> 3     3 s1_all.TextGrid top   3_s1_top.wav"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/data_manipulation_with_tidyverse.html","id":"flextext-format","dir":"Articles","previous_headings":"","what":".flextext format","title":"Manipulating `phonfieldwork` data with `tidyverse`","text":"Imagine obtained first result flextext_to_df(): can see df print three indices dataset: p_id – paragraph id, s_id – sentence id w_id – word id. first filter() removes garbage rows present example flextext. select() function selects six important columns 15 presented dataset. group_by() summarise() merge text txt variable glosses gls variable together. Pipe operater %>% make possible pass result previous funstion input following one. now can use code order merge everything sentences: also easy get simple statistics data: filter() function remove empty glosses, calculate sort according frequency, end take top six glosses top_n() function. can even visualis ggplot2 package:","code":"df <- flextext_to_df(\"files/zilo_test.flextext\") #> It can take some time for big files... head(df) #>   p_id s_id w_id    txt     cf hn     gls                   msa                free_trans #> 1    1    1    1     б-     б-  1      an Inflects any category Жил-был (у Гъули?) петух. #> 2    1    1    1    ик1    ик1  1    быть                    гл Жил-был (у Гъули?) петух. #> 3    1    1    1     -о     -о  1     pst               гл:Past Жил-был (у Гъули?) петух. #> 4    1    1    1     -й     -й  5 cvb(pf)    гл:Converb/Perfect Жил-был (у Гъули?) петух. #> 5    1    1    1 =гъоди =гъоди  1    =rep                  част Жил-был (у Гъули?) петух. #> 6    1    1    2     б-     б-  1      an Inflects any category Жил-был (у Гъули?) петух. #>                            text_title                                morph #> 1 2017.04 Fairytale about the rooster d7f713db-e8cf-11d3-9764-00c04f186933 #> 2 2017.04 Fairytale about the rooster d7f713e8-e8cf-11d3-9764-00c04f186933 #> 3 2017.04 Fairytale about the rooster d7f713dd-e8cf-11d3-9764-00c04f186933 #> 4 2017.04 Fairytale about the rooster d7f713dd-e8cf-11d3-9764-00c04f186933 #> 5 2017.04 Fairytale about the rooster d7f713e1-e8cf-11d3-9764-00c04f186933 #> 6 2017.04 Fairytale about the rooster d7f713db-e8cf-11d3-9764-00c04f186933 #>                                   word                               phrase #> 1 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 #> 2 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 #> 3 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 #> 4 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 #> 5 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 #> 6 c76d26b7-b84a-42a8-ba34-38e712b1db13 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 #>                              paragraph                                 text #> 1 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 #> 2 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 #> 3 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 #> 4 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 #> 5 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 #> 6 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 df %>%    filter(free_trans != \"\") %>%    select(p_id, s_id, w_id, txt, gls, free_trans) %>%    group_by(p_id, s_id, free_trans, w_id) %>%    summarise(txt = str_c(txt, collapse = \"\"),          gls = str_c(gls, collapse = \"-\")) #> `summarise()` has grouped output by 'p_id', 's_id', 'free_trans'. You can override using #> the `.groups` argument. #> # A tibble: 136 × 6 #> # Groups:   p_id, s_id, free_trans [19] #>     p_id  s_id free_trans                        w_id txt              gls                   #>    <dbl> <dbl> <chr>                            <dbl> <chr>            <chr>                 #>  1     1     1 Жил-был (у Гъули?) петух.            1 б-ик1-о-й=гъоди  \"an-быть-pst-cvb(pf)… #>  2     1     1 Жил-был (у Гъули?) петух.            2 б--о-ч1игу=гъоди \"an--pst-neg.cvb-=re… #>  3     1     1 Жил-был (у Гъули?) петух.            3 Гъули-б          \"Гъули-an(gen)\"       #>  4     1     1 Жил-был (у Гъули?) петух.            4 х1елеко          \"петух\"               #>  5     1     1 Жил-был (у Гъули?) петух.            5 .                \"\"                    #>  6     2     2 Он грелся на улице(?).               6 къват1и-ла=гъоди \"улица-in-=rep\"       #>  7     2     2 Он грелся на улице(?).               7 б-ик1-о-j        \"an-быть-pst-cvb(pf)\" #>  8     2     2 Он грелся на улице(?).               8 букьир-ъа        \"Букир-sup\"           #>  9     2     2 Он грелся на улице(?).               9 .                \"\"                    #> 10     2     3 [Ему в ногу] воткнулась колючка.    10 къинни-й=гъоди   \"втыкаться-cvb(pf)-=… #> # … with 126 more rows df %>%    filter(free_trans != \"\") %>%    select(p_id, s_id, w_id, txt, gls, free_trans) %>%    group_by(p_id, s_id, free_trans, w_id) %>%    summarise(txt = str_c(txt, collapse = \"\"),          gls = str_c(gls, collapse = \"-\")) %>%    group_by(p_id, s_id, free_trans) %>%    summarise(txt = str_c(txt, collapse = \" \"),          gls = str_c(gls, collapse = \" \")) #> `summarise()` has grouped output by 'p_id', 's_id', 'free_trans'. You can override using #> the `.groups` argument. #> `summarise()` has grouped output by 'p_id', 's_id'. You can override using the `.groups` #> argument. #> # A tibble: 19 × 5 #> # Groups:   p_id, s_id [19] #>     p_id  s_id free_trans                                                        txt   gls   #>    <dbl> <dbl> <chr>                                                             <chr> <chr> #>  1     1     1 \"Жил-был (у Гъули?) петух.\"                                       б-ик… \"an-… #>  2     2     2 \"Он грелся на улице(?).\"                                          къва… \"ули… #>  3     2     3 \"[Ему в ногу] воткнулась колючка.\"                                къин… \"вты… #>  4     3     4 \"Когда колючка воткнулась, [он] ушел к Бихтаю.\"                   ццан… \"кол… #>  5     4     5 \"Гъули не обнаружил дома Бихтай, дома ее нет, из себя не вынул и… бихь… \"Бих… #>  6     5     6 \"Оттуда пошел к Умалаю, \"                                         б-uʔ… \"an-… #>  7     6     7 \"Оттуда петух пошел к Патимат.\"                                   х1ел… \"пет… #>  8     8    10 \"Оттуда [петух] пошел к Ханичай.\"                                 гье-… \"dem… #>  9     9    11 \"Иди к Хурмат, ...\"                                               хъан… \"Хан… #> 10    10    12 \"Когда дошёл до двора Хурмат, из окна появился мальчик, сказал:\"  рул1… \"гов… #> 11    11    13 \"Три дня не ели, мы с ней не зная, сказал он.\"                    рул1… \"гов… #> 12    12    14 \"Оттуда он ушёл и дошёл до Айшат Исмаиловой и её не обнаружив, о… гье-… \"dem… #> 13    13    15 \"Захраил …?\"                                                      й--и… \"f--… #> 14    14    16 \"И он пошел в село. Захраил сказала, что колючка воткнулась в пе… б-ук… \"an-… #> 15    15    17 \"Оттуда снизу вверх к Исрапилу ...\"                               гьег… \"там… #> 16    16    18 \"Шли-шли и пришли к Гаджи.\"                                       гье-… \"dem… #> 17    17    19 \"Они поссорились (?) и прогнали (?) петуха.\"                      й-ей… \"f-р… #> 18    18    20 \"Когда закончили ссориться, [пошли?] к Забиту.\"                   джид… \"дел… #> 19    19    21 \"На воротах Забита петух обнаружил замок и пошел к Зумайрат.\"     х1ел… \"пет… df %>%    filter(gls != \"\") %>%    count(gls) %>%    top_n(6) #> Selecting by n #>        gls  n #> 1     =add 46 #> 2       an 49 #> 3  cvb(pf) 63 #> 4      pst 28 #> 5 pst(aor) 74 #> 6     ¬an1 34 df %>%    filter(gls != \"\") %>%    count(gls) %>%    top_n(11) %>%    ggplot(aes(n, fct_reorder(gls, n)))+   geom_col()+   labs(x = \"count\", y = \"gloss\") #> Selecting by n"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/ethical_research_with_phonfieldwork.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Ethical Research with `phonfieldwork`","text":"document comment ethical policy phonfieldwork package legal effect. create_viewer() function part phonfieldwork package creates .html file contains: table data list sounds can played users list pictures can viewed users main goal phonfieldwork package create tool linguistic research, like emphasize possible ethical problems connected possibility putting obtained .html file online. problems also concern ethical comissions institution publishing platforms. Perhapse similar set rules concerns listed .","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/articles/ethical_research_with_phonfieldwork.html","id":"linguistic-research","dir":"Articles","previous_headings":"","what":"Linguistic research","title":"Ethical Research with `phonfieldwork`","text":"collected data human subjects expect participants (legal representatives): participated voluntarily knew goal research informed possibility withdraw consent agreed obtained data used purpose scientific research agreed obtained data shared researchers agreed obtained data made available online (optional, important want post data online) agreed proposed compensation kind information usually collected via informed consent forms, also specify form data researched shared: raw data (e.g. audio), aggregated (speaker, gender, age, etc), anonymized/non-anonymized etc. ethical use phonfieldwork package implies two things: researcher reveal data listed informed consent form information related vulnerable populations can bring possible harm personally identifiable sensitive data traced back owner subjects research consent publication data online agree sharing among researchers, can use encrypt_html_file() function encryptedRmd package order make work password protected. also important contact information .html case subjects want withdraw consent sharing data.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/articles/ethical_research_with_phonfieldwork.html","id":"bioacoustic-research","dir":"Articles","previous_headings":"","what":"Bioacoustic research","title":"Ethical Research with `phonfieldwork`","text":"possible use phonfieldwork biacoustic research, publishing high quality recordings done caution. Unfortunately, animal call recordings used poachers, hunters, photographers animal lovers order lure animals. possible harm poachers hunters obviouse. Stimulation animals made photographers animal lovers cause lots stress distract animals’ routines (e. g. eating, sleeping etc.). Ethical use phonfieldwork package implies researcher reveal information related animal populations may bring possible harm individual animal. Thanks Ines Moran providing information ethics bioacoustics.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/articles/ethical_research_with_phonfieldwork.html","id":"other-ethical-problems","dir":"Articles","previous_headings":"","what":"Other ethical problems","title":"Ethical Research with `phonfieldwork`","text":"Since phonfieldwork can create .html type data , important emphasize ethical problems conected kind research. publish data : produced distributed without informed consent contain, promote, threaten harassment violence people basis race, ethnicity, national origin, caste, sexual orientation, gender identity, religious affiliation, age, disability, disease contain, promote suicide self-harm contain, promote threaten sexual exploitation contain, promote consumption illegal goods services synthetic manipulated order cause harm violate others’ intellectual property rights, including copyright trademark","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"lot different typical tasks solved phonetic research experiments. includes creating presentation contain stimuli, renaming concatenating multiple sound files recorded session, automatic annotation ‘Praat’ TextGrids (one sound annotation standards provided ‘Praat’ software, see Boersma & Weenink 2020 https://www.fon.hum.uva.nl/praat/), creating html table annotations spectrograms, converting multiple formats (‘Praat’ TextGrid, ‘EXMARaLDA’ Schmidt Wörner (2009) ‘ELAN’ Wittenburg et al. (2006)). tasks can solved mixture different tools (programming language programs automatic renaming, Praat contains scripts concatenating renaming files, etc.). phonfieldwork provides functionality make easier solve tasks independently additional tools. can also compare functionality packages: ‘rPraat’ Bořil Skarnitzl (2016), ‘textgRid’ Reidy (2016), ‘pympi’ Lubbers Torreira (2013) (thx Lera Dushkina Anya Klezovich letting know pympi). lot different books linguistic fieldwork experiments (e.g. Gordon (2003), Bowern (2015)). tutorial covers data organization part. focus cases researcher clearly knows wants analyze already created list stimuli wants record. now phonfieldwork works .wav(e) .mp3 audiofiles .TextGrid, .eaf, .exb, .srt, Audacity .txt .flextext annotation formats, main functionality availible .TextGrid files (plan extend functionality types data). following sections describe workflow phonetic fieldwork experiments.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"install-the-package","dir":"Articles","previous_headings":"","what":"Install the package","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"start, make sure installed package, example following command: command install last stable version phonfieldwork package CRAN. Since CRAN runs multiple package checks making available, safest option. Alternatively, can download development version GitHub: trouble installing package, able use functionality. case can create issue Github send email. Since package completely destroy data, please use sure made backup. Use library() command load package: order work rmarkdown functions need install pandoc, see vignette(\"pandoc\") details. tutorial made using following version phonfieldwork: tutorial can cited follows: trouble using package, hesitate create issue Github.","code":"install.packages(\"phonfieldwork\") install.packages(\"remotes\") remotes::install_github(\"ropensci/phonfieldwork\") library(\"phonfieldwork\") packageVersion(\"phonfieldwork\") ## [1] '0.0.12' citation(\"phonfieldwork\") ## Error in person$family: $ operator is invalid for atomic vectors"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"philosophy-of-the-phonfieldwork-package","dir":"Articles","previous_headings":"","what":"Philosophy of the phonfieldwork package","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"phonetic research consists following steps: Formulate research question. Think kind data necessary answer question, appropriate amount data, kind annotation , kind statistical models visualizations use, etc. Create list stimuli. Elicite list stimuli speakers signed Informed Consent statement, agreeing participate experiment recorded audio /video. Keep eye recording settings: sampling rate, resolution (bit), number channels across recordings. Annotate collected data. Extract collected data. Create visualizations evaluate statistical models. Report results. Publish data. phonfieldwork package created helping items 3, partially 4, 5 8. make automatic annotation data easier, usually record stimulus separate file. recording, carefully listen consultants make sure producing kind speech want: three isolated pronunciations stimulus, separated pause contained carrier phrase. case speaker produce three clear repetitions, ask repeat task, result fieldwork session : collection small soundfiles (video) sampling rate, resolution (bit), number channels list succesful unsuccesful attempts produce stimulus according requirements (usually keep list regular notebook) phoneticians prefer record everything, language documentation purposes. think separate task: can’t cake eat . insist recording everything, possible run two recorders time: one run whole session, used produce small audio files. can also use special software record stimuli automatically computer (e.g. SpeechRecorder PsychoPy). can show native speaker stimuli one one show stimule ask pronounce certain stimulus translation. use presentations collect stimuli particular order without risk omissions. Since stimulus recorded separate audiofile, possible merge one file automatically make annotation Praat TextGrid (result can achieved Concatenate recoverably command Praat). step, user needs annotation /. annotation part finished, possible extract annotated parts table, annotated object row characterised features (stimulus, repetition, speaker, etc…). can play soundfile view oscilogram spectrogram. example file instruction .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"make-a-list-of-your-stimuli","dir":"Articles","previous_headings":"The phonfieldwork package in use","what":"Make a list of your stimuli","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"several ways enter information list stimuli R: using c() function can create vector words store variable my_stimuli (can choose name): also possible store list column .csv file read R using read.csv() function: also possible store list column .xls xlsx file read R using read_xls read_xlsx functions readxl package. package readxl installed computer, install using install.packages(\"readxl\")","code":"my_stimuli <- c(\"tip\", \"tap\", \"top\") my_stimuli_df <- read.csv(\"my_stimuli_df.csv\") my_stimuli_df ##   stimuli vowel ## 1     tip     ı ## 2     tap     æ ## 3     top     ɒ library(\"readxl\") # run install.packages(\"readxl\") in case you don't have it installed my_stimuli_df <- read_xlsx(\"my_stimuli_df.xlsx\") my_stimuli_df ## # A tibble: 3 × 2 ##   stimuli vowel ##   <chr>   <chr> ## 1 tip     ı     ## 2 tap     æ     ## 3 top     ɒ"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"create-a-presentation-based-on-a-list-of-stimuli","dir":"Articles","previous_headings":"The phonfieldwork package in use","what":"Create a presentation based on a list of stimuli","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"list stimuli loaded R, can create presentation elicitation. important define output directory, following example use getwd() function, returns path current working directory. can set directory current one using setwd() function. also possible provide path intended output directory output_dir (e. g. “/home/user_name/…”). command (unlike setwd()) change working directory. result, file “first_example.html” created output folder. can change name file changing output_file argument. .html file now looks follows: browser support iframes :( also possible change output format, using output_format argument. dafault “html”, can also use “pptx” (relatively new feature rmarkdown, update package case get errors). also additional argument translations, can provide translations stimuli order appeared near stimuli slide. also possible use images (gif, e. g. sign language research) stimuli. order need provide absolute relative path file instead stimulus mark external argument, stimuli external: browser support iframes :(","code":"create_presentation(stimuli = my_stimuli_df$stimuli,                     output_file = \"first_example\",                     output_dir = getwd()) my_image <- system.file(\"extdata\", \"r-logo.png\", package = \"phonfieldwork\") my_image ## [1] \"/home/agricolamz/R/x86_64-pc-linux-gnu-library/4.2/phonfieldwork/extdata/r-logo.png\" create_presentation(stimuli = c(\"rzeka\", \"drzewo\", my_image),                     external = 3,                     output_file = \"second_example\",                     output_dir = getwd())"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"rename-collected-data","dir":"Articles","previous_headings":"The phonfieldwork package in use","what":"Rename collected data","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"collecting data removing soundfiles unsuccesful elicitations, one end following structure: speaker s1 s2 folder containes three audiofiles. Now let’s rename files. result, obtain following structure: rename_soundfiles() function created backup folder unrenamed files, renamed files using prefix provided prefix argument. additional argument backup can set FALSE (TRUE default), case sure renaming function work properly files stimuli, need backup unrenamed files. also additional argument logging (TRUE default) creates logging.csv file backup folder (original folder backup argument value FALSE) correspondences old new names files. contence logging.csv: name added additional prefix number make easear keep original sorting stimuli. want autonumbering turn autonumbering FALSE: last command renamed soundfiles s2 folder, adding prefix s2 previous example, suffix 1-3. operating systems impossible create two files name, sometimes can useful add kind index end files. also possible scenario, stimuli retrieved informant. order deal case additional argument missing, user can put id numbers stimuli present audiofiles: Sometimes useful get information sound duration: also possible analyze whole folder using read_from_folder() function. first argument path folder. second argument type information file type (possible values: “audacity”, “duration”, “eaf”, “exb”, “flextext”, “formant”, “intensity”, “picth”, “srt”, “textgrid”): now phonfieldwork works .wav(e) .mp3 sound files.","code":"## ├── s1 ## │   ├── 01.wav ## │   ├── 02.wav ## │   └── 03.wav ## ├── s2 ## │   ├── 01.wav ## │   ├── 02.wav ## │   └── 03.wav rename_soundfiles(stimuli = my_stimuli_df$stimuli,                   prefix = \"s1_\",                   path = \"s1/\") ## You can find change correspondences in the following file: ## /home/agricolamz/work/packages/phonfieldwork/vignettes/s1/backup/logging.csv ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   └── backup ## │       ├── 01.wav ## │       ├── 02.wav ## │       ├── 03.wav ## │       └── logging.csv ## ├── s2 ## │   ├── 01.wav ## │   ├── 02.wav ## │   └── 03.wav ##     from           to ## 1 01.wav 1_s1_tip.wav ## 2 02.wav 2_s1_tap.wav ## 3 03.wav 3_s1_top.wav rename_soundfiles(stimuli = my_stimuli_df$stimuli,                   prefix = \"s2_\",                   suffix = paste0(\"_\", 1:3),                   path = \"s2/\",                   backup = FALSE,                   logging = FALSE,                   autonumbering = FALSE) ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   └── backup ## │       ├── 01.wav ## │       ├── 02.wav ## │       ├── 03.wav ## │       └── logging.csv ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav rename_soundfiles(stimuli = my_stimuli_df$stimuli,                   path = \"s3/\",                   missing = c(1, 3)) get_sound_duration(\"s1/2_s1_tap.wav\") ##           file  duration ## 1 2_s1_tap.wav 0.4299093 read_from_folder(path = \"s2/\", \"duration\") ##           file  duration ## 1 s2_tap_2.wav 0.5343991 ## 2 s2_tip_1.wav 0.5866440 ## 3 s2_top_3.wav 0.6650113"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"merge-all-data-together","dir":"Articles","previous_headings":"The phonfieldwork package in use","what":"Merge all data together","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"files renamed, can merge one. Remmber sampling rate, resolution (bit), number channels across recordings. possible resample files resample() function biacoustics. comand creates new soundfile s1_all.wav asociated Praat TextGrid s1_all.TextGrid: resulting file can parsed Praat:  Sometimes recorded sounds silence beginning end, merging result utterances close . possible fix using argument separate_duration concatenate_soundfiles() function: just put desired duration separator seconds. kind task occur within phonfieldwork philosophy, also possible merge multiple .TextGrids tier structure using concatente_textgrids() function.","code":"concatenate_soundfiles(path = \"s1/\",                        result_file_name = \"s1_all\") ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   ├── backup ## │   │   ├── 01.wav ## │   │   ├── 02.wav ## │   │   ├── 03.wav ## │   │   └── logging.csv ## │   ├── s1_all.TextGrid ## │   └── s1_all.wav ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"annotate-your-data","dir":"Articles","previous_headings":"The phonfieldwork package in use","what":"Annotate your data","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"possible annotate words using existing annotation:  can see example, annotate_textgrid() function creates backup tier adds new tier top previous one. possible prevent function setting backup argument FALSE. Imagine interested annotation vowels. common solution open Praat create new annotations. also possible create advance using subannotations. idea choose baseline tier later automatically cutted smaller pieces tier.  worth mentioning want different number subannotation per unit, can pass vector required numbers n_of_annotations argument. creation subannotations, can annotate created tier:  can see created third tier annotation. thing left move annotation boundaries Praat (can automated):  can see last figure backup tier created (backup = FALSE), third tier annotated (tier = 3). case want create empty TextGrid possible use create_empty_textgrid() function takes duration argument:  also possible remove tier textgrid. instance, can remove one tier previously created file:","code":"my_stimuli_df$stimuli ## [1] \"tip\" \"tap\" \"top\" annotate_textgrid(annotation =  my_stimuli_df$stimuli,                   textgrid = \"s1/s1_all.TextGrid\") create_subannotation(textgrid = \"s1/s1_all.TextGrid\",                      tier = 1, # this is a baseline tier                      n_of_annotations = 3) # how many empty annotations per unit? annotate_textgrid(annotation = c(\"\", \"ı\", \"\", \"\", \"æ\", \"\", \"\", \"ɒ\", \"\"),                   textgrid = \"s1/s1_all.TextGrid\",                   tier = 3,                   backup = FALSE) create_empty_textgrid(get_sound_duration(\"s2/s2_tip_1.wav\")$duration,                       tier_name = c(\"a\", \"b\"),                       path = \"s2\",                       result_file_name = \"s2_tip_1\") ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   ├── backup ## │   │   ├── 01.wav ## │   │   ├── 02.wav ## │   │   ├── 03.wav ## │   │   └── logging.csv ## │   ├── s1_all.TextGrid ## │   └── s1_all.wav ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.TextGrid ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav remove_textgrid_tier(textgrid = \"s2/s2_tip_1.TextGrid\", tier = 2)"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"extracting-your-data","dir":"Articles","previous_headings":"The phonfieldwork package in use","what":"Extracting your data","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"First, important create folder extracted files stored: possible extract annotated files based annotation tier:","code":"dir.create(\"s1/s1_sounds\") extract_intervals(file_name = \"s1/s1_all.wav\",                   textgrid = \"s1/s1_all.TextGrid\",                   tier = 3,                   path = \"s1/s1_sounds/\",                   prefix = \"s1_\") ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   ├── backup ## │   │   ├── 01.wav ## │   │   ├── 02.wav ## │   │   ├── 03.wav ## │   │   └── logging.csv ## │   ├── s1_all.TextGrid ## │   ├── s1_all.wav ## │   └── s1_sounds ## │       ├── 1_s1_ı.wav ## │       ├── 2_s1_æ.wav ## │       └── 3_s1_ɒ.wav ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.TextGrid ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"visualizing-your-data","dir":"Articles","previous_headings":"The phonfieldwork package in use","what":"Visualizing your data","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"possible view oscilogram spetrogram soundfile:  additional parameters: title – title plot – time seconds start extraction – time seconds stop extraction zoom – time seconds zooming spectrogram text_size – size text plot annotation – optional file TextGrid’s file path dataframe annotations (see section 5.) freq_scale – measure frequency: can “Hz” “kHz”. frequency_range – frequency range displayed spectrogram dynamic_range – values greater many dB maximum displayed color window_length – desired length milliseconds analysis window window – window type (can “rectangular”, “hann”, “hamming”, “cosine”, “bartlett”, “gaussian”, “kaiser”) preemphasisf – Preemphasis 6 dB per octave added frequencies specified frequency. preemphasis (important bioacoustics), set 0. spectrum_info – logical value, FALSE won’t print information spectorgram right side plot. output_file – name output file output_width – width device output_height – height device output_units – units height width given. can “px” (pixels, default value), “” (inches), “cm” “mm”. really important case long file draw whole file, since won’t fit RAM computer. can use arguments order plot fragment sound annotation:  also possible using zoom argument show part spectrogram keeping broader oscilogram context:  output_file argument provided, R save plot directory instead displaying . also possible create visualizations sound files folder. purpose need specify source folder argument sounds_from_folder target folder images (pic_folder_name). new image folder automatically created upper level folder, sound image folders level tree structure directory. also possible use argument textgrid_from_folder order specify folder .TextGrids annotation (folder sound one). default draw_sound() function sounds_from_folder argument adds title file name pictures’ title, possible turn using argument title_as_filename = FALSE. familiar Raven program bioacoustics, probably miss ability annotate time, also frequency range. order need create dataframe columns time_start, time_end, freq_low freq_high:  also possible use multiple values, colors (adding colors column) annotation (adding content column):","code":"draw_sound(file_name = \"s1/s1_sounds/1_s1_ı.wav\") draw_sound(\"s1/s1_all.wav\",            \"s1/s1_all.TextGrid\",            from = 0.4,            to = 0.95) ## Warning in df$tier == unique(df$tier): longer object length is not a multiple of shorter ## object length draw_sound(\"s1/s1_all.wav\",            \"s1/s1_all.TextGrid\",            zoom = c(0.4, 0.95)) ## Warning in df$tier == unique(df$tier): longer object length is not a multiple of shorter ## object length draw_sound(file_name = \"s1/s1_sounds/1_s1_ı.wav\",            output_file = \"s1/s1_tip\",            title = \"s1 tip\") ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   ├── backup ## │   │   ├── 01.wav ## │   │   ├── 02.wav ## │   │   ├── 03.wav ## │   │   └── logging.csv ## │   ├── s1_all.TextGrid ## │   ├── s1_all.wav ## │   ├── s1_sounds ## │   │   ├── 1_s1_ı.wav ## │   │   ├── 2_s1_æ.wav ## │   │   └── 3_s1_ɒ.wav ## │   └── s1_tip.png ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.TextGrid ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav draw_sound(sounds_from_folder = \"s1/s1_sounds/\",            pic_folder_name = \"s1_pics\") ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   ├── backup ## │   │   ├── 01.wav ## │   │   ├── 02.wav ## │   │   ├── 03.wav ## │   │   └── logging.csv ## │   ├── s1_all.TextGrid ## │   ├── s1_all.wav ## │   ├── s1_pics ## │   │   ├── 1_s1_ı.png ## │   │   ├── 2_s1_æ.png ## │   │   └── 3_s1_ɒ.png ## │   ├── s1_sounds ## │   │   ├── 1_s1_ı.wav ## │   │   ├── 2_s1_æ.wav ## │   │   └── 3_s1_ɒ.wav ## │   └── s1_tip.png ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.TextGrid ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav raven_an <- data.frame(time_start = 450,                        time_end  = 520,                        freq_low = 3,                        freq_high = 4.5)  draw_sound(system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"),            raven_annotation = raven_an) raven_an <- data.frame(time_start = c(250, 450),                        time_end  = c(400, 520),                        freq_low = c(1, 3),                        freq_high = c(2, 4.5),                        colors = c(\"red\", \"blue\"),                        content = c(\"a\", \"b\"))  draw_sound(system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"),            raven_annotation = raven_an)"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"read-linguistic-files-into-r","dir":"Articles","previous_headings":"","what":"Read linguistic files into R","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"phonfieldwork package provides also several methods reading different file types R. makes possible analyze convert .csv files (e. g. using write.csv() function). main advantage using functions return data.frames columns (time_start, time_end, content source). make easer use result draw_sound() function make possible visualise kind sound annotation systems. file .TextGrid Praat (just change system.file() function path file); see also rPraat textgRid packages file .eaf ELAN (just change system.file() function path file); see also FRelan package Niko Partanen file .exb EXMARaLDA (just change system.file() function path file) subtitles file .srt (just change system.file() function path file) file .txt Audacity file .flextext FLEx (actually connected main functionality phonfieldwork, ’d like ): also additional function working .flextext format convert glossed document docx .html format (see examples: .docx, .html): also possible convert LaTeX examples format using example_pkg argument (possible values : gb4e, langsci, expex, philex). also additional text manipulation flextext_to_df() output. functions (tier_to_df(), textgrid_to_df(), eaf_to_df(), exb_to_df(), audacity_to_df(), srt_to_df()) except flextext_to_df() can used order visualise sound annotation:  Remmember also possible read multiple files read_from_folder() funtion.","code":"textgrid_to_df(system.file(\"extdata\", \"test.TextGrid\", package = \"phonfieldwork\")) ##    id time_start   time_end content tier       tier_name        source ## 1   1 0.00000000 0.01246583            1       intervals test.TextGrid ## 6   1 0.00000000 0.01246583            2 empty_intervals test.TextGrid ## 2   2 0.01246583 0.24781914       t    1       intervals test.TextGrid ## 7   2 0.01246583 0.24781914            2 empty_intervals test.TextGrid ## 11  1 0.01246583 0.01246583       t    3          points test.TextGrid ## 3   3 0.24781914 0.39552363       e    1       intervals test.TextGrid ## 8   3 0.24781914 0.39552363            2 empty_intervals test.TextGrid ## 12  2 0.24781914 0.24781914       e    3          points test.TextGrid ## 4   4 0.39552363 0.51157715       s    1       intervals test.TextGrid ## 9   4 0.39552363 0.51157715            2 empty_intervals test.TextGrid ## 13  3 0.39552363 0.39552363       s    3          points test.TextGrid ## 5   5 0.51157715 0.65267574       t    1       intervals test.TextGrid ## 10  5 0.51157715 0.65267574            2 empty_intervals test.TextGrid ## 14  4 0.51157715 0.51157715       t    3          points test.TextGrid eaf_to_df(system.file(\"extdata\", \"test.eaf\", package = \"phonfieldwork\")) ##    tier id                                       content       tier_name tier_type id_ ## 12    1  1                                                     intervals     praat   1 ## 13    2  1                                               empty_intervals     praat   7 ## 14    1  2                                             t       intervals     praat   2 ## 1     2  2                                             C empty_intervals     praat   8 ## 8     3  1 this is just a basic sentence nothing special        sentence     praat  13 ## 2     1  3                                             e       intervals     praat   3 ## 3     2  3                                             V empty_intervals     praat   9 ## 4     1  4                                             s       intervals     praat   4 ## 5     2  4                                             C empty_intervals     praat  10 ## 6     1  5                                             t       intervals     praat   5 ## 7     2  5                                             C empty_intervals     praat  11 ## 10    1  6                                                     intervals     praat   6 ## 11    2  6                                               empty_intervals     praat  12 ## 9     3  2                             one more sentence        sentence     praat  14 ##    tier_ref event_local_id dependent_on time_start time_end   source media_url ## 12     <NA>             a1         <NA>      0.000    0.012 test.eaf      <NA> ## 13     <NA>             a7         <NA>      0.000    0.012 test.eaf      <NA> ## 14     <NA>             a2         <NA>      0.012    0.248 test.eaf      <NA> ## 1      <NA>             a8         <NA>      0.012    0.248 test.eaf      <NA> ## 8      <NA>            a13         <NA>      0.017    9.376 test.eaf      <NA> ## 2      <NA>             a3         <NA>      0.248    0.396 test.eaf      <NA> ## 3      <NA>             a9         <NA>      0.248    0.396 test.eaf      <NA> ## 4      <NA>             a4         <NA>      0.396    0.512 test.eaf      <NA> ## 5      <NA>            a10         <NA>      0.396    0.512 test.eaf      <NA> ## 6      <NA>             a5         <NA>      0.512    0.652 test.eaf      <NA> ## 7      <NA>            a11         <NA>      0.512    0.652 test.eaf      <NA> ## 10     <NA>             a6         <NA>      0.652  300.000 test.eaf      <NA> ## 11     <NA>            a12         <NA>      0.652  300.000 test.eaf      <NA> ## 9      <NA>            a14         <NA>     11.690   26.461 test.eaf      <NA> exb_to_df(system.file(\"extdata\", \"test.exb\", package = \"phonfieldwork\")) ##   tier id content tier_name tier_type tier_category tier_speaker time_start  time_end ## 3    1  1       t     X [v]         t             v         SPK0 0.06908955 0.2498984 ## 1    1  2       e     X [v]         t             v         SPK0 0.24989836 0.3807275 ## 5    1  3       s     X [v]         t             v         SPK0 0.38072750 0.4042473 ## 7    1  4       t     X [v]         t             v         SPK0 0.40424735 0.6526757 ## 4    2  1       C     X [v]         a             v         SPK0 0.06908955 0.2498984 ## 2    2  2       V     X [v]         a             v         SPK0 0.24989836 0.3807275 ## 6    2  3       C     X [v]         a             v         SPK0 0.38072750 0.4042473 ## 8    2  4       C     X [v]         a             v         SPK0 0.40424735 0.6526757 ##     source ## 3 test.exb ## 1 test.exb ## 5 test.exb ## 7 test.exb ## 4 test.exb ## 2 test.exb ## 6 test.exb ## 8 test.exb srt_to_df(system.file(\"extdata\", \"test.srt\", package = \"phonfieldwork\")) ##   id content time_start time_end   source ## 0  1       t      0.013    0.248 test.srt ## 1  2       e      0.248    0.396 test.srt ## 2  3       s      0.396    0.512 test.srt ## 3  4       t      0.512    0.653 test.srt audacity_to_df(system.file(\"extdata\", \"test_audacity.txt\", package = \"phonfieldwork\")) ##   time_start  time_end content            source ## 1  0.2319977 0.3953891    sssw test_audacity.txt head(flextext_to_df(\"files/zilo_test.flextext\")) ## It can take some time for big files... ##   p_id s_id w_id    txt     cf hn     gls                   msa                free_trans ## 1    1    1    1     б-     б-  1      an Inflects any category Жил-был (у Гъули?) петух. ## 2    1    1    1    ик1    ик1  1    быть                    гл Жил-был (у Гъули?) петух. ## 3    1    1    1     -о     -о  1     pst               гл:Past Жил-был (у Гъули?) петух. ## 4    1    1    1     -й     -й  5 cvb(pf)    гл:Converb/Perfect Жил-был (у Гъули?) петух. ## 5    1    1    1 =гъоди =гъоди  1    =rep                  част Жил-был (у Гъули?) петух. ## 6    1    1    2     б-     б-  1      an Inflects any category Жил-был (у Гъули?) петух. ##                            text_title                                morph ## 1 2017.04 Fairytale about the rooster d7f713db-e8cf-11d3-9764-00c04f186933 ## 2 2017.04 Fairytale about the rooster d7f713e8-e8cf-11d3-9764-00c04f186933 ## 3 2017.04 Fairytale about the rooster d7f713dd-e8cf-11d3-9764-00c04f186933 ## 4 2017.04 Fairytale about the rooster d7f713dd-e8cf-11d3-9764-00c04f186933 ## 5 2017.04 Fairytale about the rooster d7f713e1-e8cf-11d3-9764-00c04f186933 ## 6 2017.04 Fairytale about the rooster d7f713db-e8cf-11d3-9764-00c04f186933 ##                                   word                               phrase ## 1 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 ## 2 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 ## 3 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 ## 4 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 ## 5 efafb420-e203-4685-9be2-1b7810f10a70 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 ## 6 c76d26b7-b84a-42a8-ba34-38e712b1db13 1cbadc4f-4051-4783-a0d8-bfeee2d2fb13 ##                              paragraph                                 text ## 1 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 ## 2 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 ## 3 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 ## 4 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 ## 5 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 ## 6 0c9ffe63-b4bf-4af3-a1da-f68567e03513 f08dd466-fca6-4597-925c-c46309387ef7 create_glossed_document(flextext = \"files/zilo_test.flextext\",                         output_dir = \".\") # you need to specify the path to the output folder ## It can take some time for big files... ## Output created: /home/agricolamz/work/packages/phonfieldwork/vignettes/glossed_document.html draw_sound(file_name = system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"),            annotation = eaf_to_df(system.file(\"extdata\", \"test.eaf\", package = \"phonfieldwork\")))"},{"path":"https://docs.ropensci.org/phonfieldwork/articles/phonfieldwork.html","id":"create-a-viewer","dir":"Articles","previous_headings":"","what":"Create a viewer","title":"Phonetic fieldwork and experiments with `phonfieldwork` package","text":"Sound viewer (example 1 example 2) useful tool combine together annotations make searchable. also produce ready go .html file uploaded server (e. g. Github Pages) availible anyone world. order create sound viewer need three things: folder sounds folder pictures dataframe details (e. g. annotation, utterance number etc.) start previous folder structure: folders: left table. possible create manually (upload form .csv .xlsx files, see section 4.1): table used order create annotation viewer: result, stimuli_viewer.html created s1 folder. can find created example . Unfortunately, way table creation annotation viewer presented section good solution huge amount sounds. possible derive table annotation TextGrid, created earlier. TextGrid: order create desired table can use tier_to_df() function: see first tier ready, third tier contains empty annotations. Let’s remove : point possible create table wanted: now ready run code creating annotation viewer: default sorting result annotation viewer according file names system, want another default sorting can specify column names result table sorted using sorting_columns argument. familiar package lingtypology Moroz (2017) interactive linguistic map generation API typological databases, good news : possible connect two pacakages creating interactive map share hear view buttons. order need add glottocode column language glottocodes Glottolog Hammarström, Forkel, Haspelmath (2020) dataframe annotation details; install lingtypology command install.packages(\"lingtypology\") don’t installed; add map = TRUE argument create_viewer() function. add glottocodes Russian, Polish Czech dataframe already worked (data doesn’t make sense, just giving example usage): result file. also possible provide coordinates latitude longitude columns. case glottocode column optional.","code":"## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   ├── backup ## │   │   ├── 01.wav ## │   │   ├── 02.wav ## │   │   ├── 03.wav ## │   │   └── logging.csv ## │   ├── s1_all.TextGrid ## │   ├── s1_all.wav ## │   ├── s1_pics ## │   │   ├── 1_s1_ı.png ## │   │   ├── 2_s1_æ.png ## │   │   └── 3_s1_ɒ.png ## │   ├── s1_sounds ## │   │   ├── 1_s1_ı.wav ## │   │   ├── 2_s1_æ.wav ## │   │   └── 3_s1_ɒ.wav ## │   └── s1_tip.png ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.TextGrid ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav list.files(\"s1/s1_sounds/\") # sounds ## [1] \"1_s1_ı.wav\" \"2_s1_æ.wav\" \"3_s1_ɒ.wav\" list.files(\"s1/s1_pics/\") # pictures ## [1] \"1_s1_ı.png\" \"2_s1_æ.png\" \"3_s1_ɒ.png\" df <- data.frame(word  = c(\"tap\", \"tip\", \"top\"),                  sounds = c(\"æ\", \"ı\", \"ɒ\")) df ##   word sounds ## 1  tap      æ ## 2  tip      ı ## 3  top      ɒ create_viewer(audio_dir = \"s1/s1_sounds/\",               picture_dir = \"s1/s1_pics/\",               table = df,               output_dir = \"s1/\",               output_file = \"stimuli_viewer\") ## Since the result .html file possibly containes some vulnerable data, researcher(s) bear the whole responsibility for the publishing of the result. Run vignette(\"ethical_research_with_phonfieldwork\") for more details. ## Output created: s1/stimuli_viewer.html ## ├── s1 ## │   ├── 1_s1_tip.wav ## │   ├── 2_s1_tap.wav ## │   ├── 3_s1_top.wav ## │   ├── backup ## │   │   ├── 01.wav ## │   │   ├── 02.wav ## │   │   ├── 03.wav ## │   │   └── logging.csv ## │   ├── s1_all.TextGrid ## │   ├── s1_all.wav ## │   ├── s1_pics ## │   │   ├── 1_s1_ı.png ## │   │   ├── 2_s1_æ.png ## │   │   └── 3_s1_ɒ.png ## │   ├── s1_sounds ## │   │   ├── 1_s1_ı.wav ## │   │   ├── 2_s1_æ.wav ## │   │   └── 3_s1_ɒ.wav ## │   ├── s1_tip.png ## │   └── stimuli_viewer.html ## ├── s2 ## │   ├── s2_tap_2.wav ## │   ├── s2_tip_1.TextGrid ## │   ├── s2_tip_1.wav ## │   └── s2_top_3.wav textgrid_to_df(\"s1/s1_all.TextGrid\") ##    id time_start  time_end      content tier     tier_name          source ## 1   1  0.0000000 0.4821542          tip    1        labels s1_all.TextGrid ## 4   1  0.0000000 0.4821542 1_s1_tip.wav    2 backup labels s1_all.TextGrid ## 7   1  0.0000000 0.1072426                 3               s1_all.TextGrid ## 8   2  0.1072426 0.1887230            ı    3               s1_all.TextGrid ## 9   3  0.1887230 0.4821542                 3               s1_all.TextGrid ## 2   2  0.4821542 0.9120635          tap    1        labels s1_all.TextGrid ## 5   2  0.4821542 0.9120635 2_s1_tap.wav    2 backup labels s1_all.TextGrid ## 10  4  0.4821542 0.5770552                 3               s1_all.TextGrid ## 11  5  0.5770552 0.6793392            æ    3               s1_all.TextGrid ## 12  6  0.6793392 0.9120635                 3               s1_all.TextGrid ## 3   3  0.9120635 1.3942177          top    1        labels s1_all.TextGrid ## 6   3  0.9120635 1.3942177 3_s1_top.wav    2 backup labels s1_all.TextGrid ## 13  7  0.9120635 1.0364661                 3               s1_all.TextGrid ## 14  8  1.0364661 1.1066780            ɒ    3               s1_all.TextGrid ## 15  9  1.1066780 1.3942177                 3               s1_all.TextGrid t1 <- tier_to_df(\"s1/s1_all.TextGrid\", tier = 1) t1 ##   id time_start  time_end content tier tier_name          source ## 1  1  0.0000000 0.4821542     tip    1    labels s1_all.TextGrid ## 2  2  0.4821542 0.9120635     tap    1    labels s1_all.TextGrid ## 3  3  0.9120635 1.3942177     top    1    labels s1_all.TextGrid t3 <- tier_to_df(\"s1/s1_all.TextGrid\", tier = 3) t3 ##    id time_start  time_end content tier tier_name          source ## 7   1  0.0000000 0.1072426            3           s1_all.TextGrid ## 8   2  0.1072426 0.1887230       ı    3           s1_all.TextGrid ## 9   3  0.1887230 0.4821542            3           s1_all.TextGrid ## 10  4  0.4821542 0.5770552            3           s1_all.TextGrid ## 11  5  0.5770552 0.6793392       æ    3           s1_all.TextGrid ## 12  6  0.6793392 0.9120635            3           s1_all.TextGrid ## 13  7  0.9120635 1.0364661            3           s1_all.TextGrid ## 14  8  1.0364661 1.1066780       ɒ    3           s1_all.TextGrid ## 15  9  1.1066780 1.3942177            3           s1_all.TextGrid t3 <- t3[t3$content != \"\",] t3 ##    id time_start  time_end content tier tier_name          source ## 8   2  0.1072426 0.1887230       ı    3           s1_all.TextGrid ## 11  5  0.5770552 0.6793392       æ    3           s1_all.TextGrid ## 14  8  1.0364661 1.1066780       ɒ    3           s1_all.TextGrid new_df <- data.frame(words = t1$content,                      sounds = t3$content) new_df ##   words sounds ## 1   tip      ı ## 2   tap      æ ## 3   top      ɒ create_viewer(audio_dir = \"s1/s1_sounds/\",               picture_dir = \"s1/s1_pics/\",               table = new_df,               output_dir = \"s1/\",               output_file = \"stimuli_viewer\") ## Since the result .html file possibly containes some vulnerable data, researcher(s) bear the whole responsibility for the publishing of the result. Run vignette(\"ethical_research_with_phonfieldwork\") for more details. ## Output created: s1/stimuli_viewer.html new_df$glottocode <- c(\"russ1263\", \"poli1260\", \"czec1258\") create_viewer(audio_dir = \"s1/s1_sounds/\",               picture_dir = \"s1/s1_pics/\",               table = new_df,               output_dir = \"s1/\",               output_file = \"stimuli_viewer2\",               map = TRUE) ## Since the result .html file possibly containes some vulnerable data, researcher(s) bear the whole responsibility for the publishing of the result. Run vignette(\"ethical_research_with_phonfieldwork\") for more details. ## Output created: s1/stimuli_viewer2.html"},{"path":[]},{"path":"https://docs.ropensci.org/phonfieldwork/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"George Moroz. Author, maintainer. Jonathan Keane. Reviewer. Niko Partanen. Reviewer. Valeria Buntiakova. Contributor.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moroz G (2023). “Phonetic fieldwork research experiments R package phonfieldwork.” Kobozeva , Semyonova K, Kostyuk , Zakharov L, Svetozarova N (eds.), «…Vperyod vverkh po lestnitse zvuchashey». Sbornik statye k 80-letiyu Olgi Fyodorovny Krivnovoy [Festschrift memoriam Olga Fyodorovna Krivnova]. Buki Vedi, Moscow. Moroz G (2020). Phonetic fieldwork experiments phonfieldwork package. https://CRAN.R-project.org/package=phonfieldwork.","code":"@InCollection{,   title = {Phonetic fieldwork research and experiments with the R package phonfieldwork},   author = {George Moroz},   year = {2023},   booktitle = {«…Vperyod i vverkh po lestnitse zvuchashey». Sbornik statye k 80-letiyu Olgi Fyodorovny Krivnovoy [Festschrift in memoriam to Olga Fyodorovna Krivnova]},   editor = {I. M. Kobozeva and K. P. Semyonova and A. E. Kostyuk and L. M. Zakharov and N. D. Svetozarova},   publisher = {Buki Vedi},   address = {Moscow}, } @Manual{,   title = {Phonetic fieldwork and experiments with phonfieldwork package},   author = {George Moroz},   year = {2020},   url = {https://CRAN.R-project.org/package=phonfieldwork}, }"},{"path":"https://docs.ropensci.org/phonfieldwork/index.html","id":"phonfieldwork","dir":"","previous_headings":"","what":"Linguistic Phonetic Fieldwork Tools","title":"Linguistic Phonetic Fieldwork Tools","text":"phonfieldwork package phonetic fieldwork research experiments. package makes easier : create html/pptx presentation stimuli-translation list, rename soundfiles according list stimuli, concatenate multiple soundfiles create Praat TextGrid interval labels original names sound extract sounds according annotation extract annotation multiple linguistic formats (Praat .TextGrid, ELAN .eaf, EXMARaLDA .exb, Audacity .txt subtitles .srt) visualise oscilograms, spectrograms annotations create html viewer like , ethical problems kind viewer linguistic research covered vignette vignette(\"ethical_research_with_phonfieldwork\"). details see tutorial. main goal phonfieldwork package make full research workflow, data collection data extraction data representation, easier people familiar programming. However, phonfieldwork functionality can found software packages: stimuli presentation creation done programming language probably without automatic file renaming automatic merging done programming language Praat .TextGrid manipulation possible Praat, R packages rPraat textgRid, Python package ‘pympi’ ELAN .eaf manipulation possible ELAN, R package FRelan Python package pympi import export Praat .TextGrid, ELAN .eaf, ’EXMARaLDA .exb possible R package act cutting sounds according annotation possible Praat R packagetuneR spectrogram visualisation possible multiple R packages signal, tuneR, seewave, phonTools, monitor, warbleR, soundgen many others","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Linguistic Phonetic Fieldwork Tools","text":"Install CRAN: Get development version GitHub: Load library: order work rmarkdown functions need install pandoc, see vignette(\"pandoc\") details.","code":"install.packages(\"phonfieldwork\") install.packages(\"remotes\") remotes::install_github(\"ropensci/phonfieldwork\") library(phonfieldwork)"},{"path":"https://docs.ropensci.org/phonfieldwork/index.html","id":"cite-the-package","dir":"","previous_headings":"","what":"Cite the package","title":"Linguistic Phonetic Fieldwork Tools","text":"can get latest information cite package using citation() function:","code":"citation(\"phonfieldwork\") > > To cite package ‘phonfieldwork’ in publications use: >    >   Moroz G (2020). _Phonetic fieldwork and experiments with phonfieldwork package_. > <https://CRAN.R-project.org/package=phonfieldwork>. >  > A BibTeX entry for LaTeX users is >  > @Manual{, >   title = {Phonetic fieldwork and experiments with phonfieldwork package}, >   author = {George Moroz}, >   year = {2020}, >   url = {https://CRAN.R-project.org/package=phonfieldwork}, > }"},{"path":"https://docs.ropensci.org/phonfieldwork/index.html","id":"to-do","dir":"","previous_headings":"","what":"To do:","title":"Linguistic Phonetic Fieldwork Tools","text":"export ELAN EXMARALDA files use ELAN EXMARALDA files whole pipeline described docs use pipeline video (Sign Languages) make TECkit df back","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/add_leading_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Create indices padded with zeros — add_leading_symbols","title":"Create indices padded with zeros — add_leading_symbols","text":"Create indices padded zeros. important creating appropriate sorting names.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/add_leading_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create indices padded with zeros — add_leading_symbols","text":"","code":"add_leading_symbols(file_names)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/add_leading_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create indices padded with zeros — add_leading_symbols","text":"file_names vector values.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/add_leading_symbols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create indices padded with zeros — add_leading_symbols","text":"string numbers padded leadinng zero.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/add_leading_symbols.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create indices padded with zeros — add_leading_symbols","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/annotate_textgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate textgrid — annotate_textgrid","title":"Annotate textgrid — annotate_textgrid","text":"Annotates textgrids. possible define step argument \"\", second element tier annotated.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/annotate_textgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate textgrid — annotate_textgrid","text":"","code":"annotate_textgrid(   annotation,   textgrid,   tier = 1,   each = 1,   backup = TRUE,   write = TRUE )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/annotate_textgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate textgrid — annotate_textgrid","text":"annotation vector stimuli textgrid character filename path TextGrid tier value either ordinal number tier either name tier non-negative integer. element x repeated times backup logical. TRUE (default) creates backup tier. write logical. TRUE (dafault) overwrites existing tier.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/annotate_textgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate textgrid — annotate_textgrid","text":"string contain TextGrid. argument write TRUE, output.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/annotate_textgrid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Annotate textgrid — annotate_textgrid","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/annotate_textgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate textgrid — annotate_textgrid","text":"","code":"annotate_textgrid(   annotation = c(\"\", \"t\", \"e\", \"s\", \"t\"),   textgrid = system.file(\"extdata\",     \"test.TextGrid\",     package = \"phonfieldwork\"   ),   tier = 2, write = FALSE ) #>   [1] \"File type = \\\"ooTextFile\\\"\"                 #>   [2] \"Object class = \\\"TextGrid\\\"\"                #>   [3] \"\"                                           #>   [4] \"xmin = 0 \"                                  #>   [5] \"xmax = 0.6526757369614512 \"                 #>   [6] \"tiers? <exists> \"                           #>   [7] \"size = 4 \"                                  #>   [8] \"item []: \"                                  #>   [9] \"    item [1]:\"                              #>  [10] \"        class = \\\"IntervalTier\\\" \"          #>  [11] \"        name = \\\"intervals\\\" \"              #>  [12] \"        xmin = 0 \"                          #>  [13] \"        xmax = 0.6526757369614512 \"         #>  [14] \"        intervals: size = 5 \"               #>  [15] \"        intervals [1]:\"                     #>  [16] \"            xmin = 0 \"                      #>  [17] \"            xmax = 0.012465825768947203 \"   #>  [18] \"            text = \\\"\\\" \"                   #>  [19] \"        intervals [2]:\"                     #>  [20] \"            xmin = 0.012465825768947203 \"   #>  [21] \"            xmax = 0.247819135106803 \"      #>  [22] \"            text = \\\"t\\\" \"                  #>  [23] \"        intervals [3]:\"                     #>  [24] \"            xmin = 0.247819135106803 \"      #>  [25] \"            xmax = 0.39552362579469874 \"    #>  [26] \"            text = \\\"e\\\" \"                  #>  [27] \"        intervals [4]:\"                     #>  [28] \"            xmin = 0.39552362579469874 \"    #>  [29] \"            xmax = 0.5115771541923311 \"     #>  [30] \"            text = \\\"s\\\" \"                  #>  [31] \"        intervals [5]:\"                     #>  [32] \"            xmin = 0.5115771541923311 \"     #>  [33] \"            xmax = 0.6526757369614512 \"     #>  [34] \"            text = \\\"t\\\" \"                  #>  [35] \"    item [2]:\"                              #>  [36] \"        class = \\\"IntervalTier\\\" \"          #>  [37] \"        name = \\\"empty_intervals\\\" \"        #>  [38] \"        xmin = 0 \"                          #>  [39] \"        xmax = 0.6526757369614512 \"         #>  [40] \"        intervals: size = 5 \"               #>  [41] \"        intervals [1]:\"                     #>  [42] \"            xmin = 0 \"                      #>  [43] \"            xmax = 0.012465825768947203 \"   #>  [44] \"            text = \\\"\\\" \"                   #>  [45] \"        intervals [2]:\"                     #>  [46] \"            xmin = 0.012465825768947203 \"   #>  [47] \"            xmax = 0.247819135106803 \"      #>  [48] \"            text = \\\"t\\\" \"                  #>  [49] \"        intervals [3]:\"                     #>  [50] \"            xmin = 0.247819135106803 \"      #>  [51] \"            xmax = 0.39552362579469874 \"    #>  [52] \"            text = \\\"e\\\" \"                  #>  [53] \"        intervals [4]:\"                     #>  [54] \"            xmin = 0.39552362579469874 \"    #>  [55] \"            xmax = 0.5115771541923311 \"     #>  [56] \"            text = \\\"s\\\" \"                  #>  [57] \"        intervals [5]:\"                     #>  [58] \"            xmin = 0.5115771541923311 \"     #>  [59] \"            xmax = 0.6526757369614512 \"     #>  [60] \"            text = \\\"t\\\" \"                  #>  [61] \"    item [3]:\"                              #>  [62] \"        class = \\\"TextTier\\\" \"              #>  [63] \"        name = \\\"points\\\" \"                 #>  [64] \"        xmin = 0 \"                          #>  [65] \"        xmax = 0.6526757369614512 \"         #>  [66] \"        points: size = 4 \"                  #>  [67] \"        points [1]:\"                        #>  [68] \"            number = 0.012465825768947203 \" #>  [69] \"            mark = \\\"t\\\" \"                  #>  [70] \"        points [2]:\"                        #>  [71] \"            number = 0.247819135106803 \"    #>  [72] \"            mark = \\\"e\\\" \"                  #>  [73] \"        points [3]:\"                        #>  [74] \"            number = 0.39552362579469874 \"  #>  [75] \"            mark = \\\"s\\\" \"                  #>  [76] \"        points [4]:\"                        #>  [77] \"            number = 0.5115771541923311 \"   #>  [78] \"            mark = \\\"t\\\" \"                  #>  [79] \"    item [4]:\"                              #>  [80] \"        class = \\\"IntervalTier\\\" \"          #>  [81] \"        name = \\\"backup empty_intervals\\\" \" #>  [82] \"        xmin = 0 \"                          #>  [83] \"        xmax = 0.6526757369614512 \"         #>  [84] \"        intervals: size = 5 \"               #>  [85] \"        intervals [1]:\"                     #>  [86] \"            xmin = 0 \"                      #>  [87] \"            xmax = 0.012465825768947203 \"   #>  [88] \"            text = \\\"\\\" \"                   #>  [89] \"        intervals [2]:\"                     #>  [90] \"            xmin = 0.012465825768947203 \"   #>  [91] \"            xmax = 0.247819135106803 \"      #>  [92] \"            text = \\\"\\\" \"                   #>  [93] \"        intervals [3]:\"                     #>  [94] \"            xmin = 0.247819135106803 \"      #>  [95] \"            xmax = 0.39552362579469874 \"    #>  [96] \"            text = \\\"\\\" \"                   #>  [97] \"        intervals [4]:\"                     #>  [98] \"            xmin = 0.39552362579469874 \"    #>  [99] \"            xmax = 0.5115771541923311 \"     #> [100] \"            text = \\\"\\\" \"                   #> [101] \"        intervals [5]:\"                     #> [102] \"            xmin = 0.5115771541923311 \"     #> [103] \"            xmax = 0.6526757369614512 \"     #> [104] \"            text = \\\"\\\" \""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/audacity_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Audacity's labels to dataframe — audacity_to_df","title":"Audacity's labels to dataframe — audacity_to_df","text":"Audacity make possible annotate sound files labels can exported .tsv file .txt extension. function convert result dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/audacity_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Audacity's labels to dataframe — audacity_to_df","text":"","code":"audacity_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/audacity_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Audacity's labels to dataframe — audacity_to_df","text":"file_name file_name string filename path .txt file produced Audacity","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/audacity_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Audacity's labels to dataframe — audacity_to_df","text":"dataframe columns:  content, time_start, time_end, source.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/audacity_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Audacity's labels to dataframe — audacity_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/audacity_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Audacity's labels to dataframe — audacity_to_df","text":"","code":"audacity_to_df(system.file(\"extdata\",   \"test_audacity.txt\",   package = \"phonfieldwork\" )) #>   time_start  time_end content            source #> 1  0.2319977 0.3953891    sssw test_audacity.txt"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_soundfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate sounds — concatenate_soundfiles","title":"Concatenate sounds — concatenate_soundfiles","text":"Creates merged sound file old sound files folder. annotation argument equal NULL, creates annotation file (Praat .TextGrid, ELAN .eaf EXMARaLDA .exb) original sound names annotation.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_soundfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate sounds — concatenate_soundfiles","text":"","code":"concatenate_soundfiles(   path,   result_file_name = \"concatenated\",   annotation = \"textgrid\",   separate_duration = 0 )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_soundfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate sounds — concatenate_soundfiles","text":"path path directory soundfiles. result_file_name name result annotation files. annotation character. several variants: \"textgrid\" Praat TextGrid, \"eaf\" ELAN's .eaf file, \"exb\" EXMARaLDA's .exb file. also possible use NULL order prevent creation annotation file. separate_duration double. possible add silence concatenated sounds. variable denotes duration soundless separator seconds.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_soundfiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate sounds — concatenate_soundfiles","text":"output","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_soundfiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Concatenate sounds — concatenate_soundfiles","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_soundfiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate sounds — concatenate_soundfiles","text":"","code":"# create two files in a temprary folder \"test_folder\" s1 <- system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\") s2 <- system.file(\"extdata\", \"post.wav\", package = \"phonfieldwork\") tdir <- tempdir() file.copy(c(s1, s2), tdir) #> [1] TRUE TRUE  # here are two .wav files in a folder list.files(tdir) #> [1] \"bslib-0d0ca9323b2066622661ec758fe71f22\" #> [2] \"downlit\"                                #> [3] \"file87e7ff6caa7\"                        #> [4] \"post.wav\"                               #> [5] \"test.wav\"                               # [1] \"post.wav\" \"test.wav\" ...  # Concatenate all files from the folder into concatenated.wav and create # corresponding TextGrid concatenate_soundfiles(path = tdir, result_file_name = \"concatenated\")  list.files(tdir) #> [1] \"bslib-0d0ca9323b2066622661ec758fe71f22\" #> [2] \"concatenated.TextGrid\"                  #> [3] \"concatenated.wav\"                       #> [4] \"downlit\"                                #> [5] \"file87e7ff6caa7\"                        #> [6] \"post.wav\"                               #> [7] \"test.wav\"                               # [1] \"concatenated.TextGrid\" \"concatenated.wav\" \"post.wav\" \"test.wav\" ..."},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_textgrids.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate sounds — concatenate_textgrids","title":"Concatenate sounds — concatenate_textgrids","text":"Creates merged sound file old sound files folder. annotation argument equal NULL, creates annotation file (Praat .TextGrid, ELAN .eaf EXMARaLDA .exb) original sound names annotation.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_textgrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate sounds — concatenate_textgrids","text":"","code":"concatenate_textgrids(path, result_file_name = \"concatenated\")"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_textgrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate sounds — concatenate_textgrids","text":"path path directory soundfiles. result_file_name name result annotation files.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_textgrids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate sounds — concatenate_textgrids","text":"output","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_textgrids.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Concatenate sounds — concatenate_textgrids","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/concatenate_textgrids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate sounds — concatenate_textgrids","text":"","code":"# create two files in a temprary folder \"test_folder\" t1 <- system.file(\"extdata\", \"test.TextGrid\", package = \"phonfieldwork\") t2 <- system.file(\"extdata\", \"post.TextGrid\", package = \"phonfieldwork\") tdir <- tempdir() file.copy(c(t1, t2), tdir) #> [1] TRUE TRUE  # here are two .wav files in a folder list.files(tdir) #> [1] \"bslib-0d0ca9323b2066622661ec758fe71f22\" #> [2] \"concatenated.TextGrid\"                  #> [3] \"concatenated.wav\"                       #> [4] \"downlit\"                                #> [5] \"file87e7ff6caa7\"                        #> [6] \"post.TextGrid\"                          #> [7] \"post.wav\"                               #> [8] \"test.TextGrid\"                          #> [9] \"test.wav\"                               # [1] \"post.TextGrid\" \"test.TextGrid\" ...  # Concatenate all TextGrids from the folder into concatenated.TextGrid concatenate_textgrids(path = tdir, result_file_name = \"concatenated\")  list.files(tdir) #> [1] \"bslib-0d0ca9323b2066622661ec758fe71f22\" #> [2] \"concatenated.TextGrid\"                  #> [3] \"concatenated.wav\"                       #> [4] \"downlit\"                                #> [5] \"file87e7ff6caa7\"                        #> [6] \"post.TextGrid\"                          #> [7] \"post.wav\"                               #> [8] \"test.TextGrid\"                          #> [9] \"test.wav\"                               # [1] \"concatenated.TextGrid\" \"post.TextGrid\" \"test.TextGrid\" ..."},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_empty_textgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty TextGrid — create_empty_textgrid","title":"Create an empty TextGrid — create_empty_textgrid","text":"Creates empty Praat TextGrid folder reference sound file. possible manage predefined number tiers, names types.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_empty_textgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty TextGrid — create_empty_textgrid","text":"","code":"create_empty_textgrid(   duration,   tier_name = NULL,   point_tier = NULL,   path,   result_file_name = \"new_textgrid\" )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_empty_textgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an empty TextGrid — create_empty_textgrid","text":"duration integer. Duration textgrid. know duration audio file use get_sound_duration() function. tier_name vector contain tier names. point_tier vector defines tiers made point tiers. argument excepts numeric values (e. g. c(2, 4) means second forth tiers) character (e. g. c(\"\", \"b\") means tiers names \"\" \"b\") path path directory soundfiles. result_file_name name result annotation files.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_empty_textgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty TextGrid — create_empty_textgrid","text":"function returns output, just creates Praat TextGrid folder reference sound file.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_empty_textgrid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an empty TextGrid — create_empty_textgrid","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_empty_textgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an empty TextGrid — create_empty_textgrid","text":"","code":"tmp <- tempfile(fileext = \".TextGrid\") create_empty_textgrid(1, path = dirname(tmp), result_file_name = basename(tmp))"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_glossed_document.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a glossed document — create_glossed_document","title":"Create a glossed document — create_glossed_document","text":"Creates file glossed example (export .flextext formats)","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_glossed_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a glossed document — create_glossed_document","text":"","code":"create_glossed_document(   flextext = NULL,   rows = c(\"gls\"),   output_dir,   output_file = \"glossed_document\",   output_format = \"html\",   example_pkg = NULL )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_glossed_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a glossed document — create_glossed_document","text":"flextext path .flextext file dataframe following columns: p_id, s_id, w_id, txt, cf, hn, gls, msa, morph, word, phrase, paragraph, free_trans, text, text_title rows vector row names flextext appear final document. Possible values : \"cf\", \"hn\", \"gls\", \"msa\". \"gls\" default. output_dir output directory rendered file output_file name result .html file (default glossed_document). output_format option can \"html\" \"docx\" example_pkg vector name LaTeX package glossing (possible values: \"gb4e\", \"langsci\", \"expex\", \"philex\")","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_glossed_document.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a glossed document — create_glossed_document","text":"render FALSE, function returns path temporary file .csv file. render TRUE, output function.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_glossed_document.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a glossed document — create_glossed_document","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_image_look_up.html","id":null,"dir":"Reference","previous_headings":"","what":"Create image look_up objects for html viewer — create_image_look_up","title":"Create image look_up objects for html viewer — create_image_look_up","text":"Create image look_up objects html viewer","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_image_look_up.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create image look_up objects for html viewer — create_image_look_up","text":"","code":"create_image_look_up(img_src, img_caption = NULL, text = \"&#x1f441;\")"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_image_look_up.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create image look_up objects for html viewer — create_image_look_up","text":"img_src string vector strings image(s) path(s). img_caption string vector strings displayed image clicked. text string o vector strings displayed view link. default eye emoji (&#x1f441;).","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_image_look_up.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create image look_up objects for html viewer — create_image_look_up","text":"string vector strings","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_image_look_up.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create image look_up objects for html viewer — create_image_look_up","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_presentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a presentation — create_presentation","title":"Creates a presentation — create_presentation","text":"Creates html powerpoint presentation working directory list words translations. example presentation.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_presentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a presentation — create_presentation","text":"","code":"create_presentation(   stimuli,   translations = \"\",   external = NULL,   font_size = 50,   output_dir,   output_format = \"html\",   output_file = \"stimuli_presentation\",   render = TRUE )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_presentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a presentation — create_presentation","text":"stimuli vector stimuli (obligatory). Can path image. translations vector translations (optional) external vector indices external images font_size font size px (50, default) output_dir output directory rendered file output_format string difine R Markdown output format: \"html\" (default) \"pptx\" output_file name result presentation file (default stimuli_presentation) render logical argument, TRUE render created R Markdown presentation output_dir folder, otherwise returns path temporary file Rmd file.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_presentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a presentation — create_presentation","text":"render FALSE, function returns path temporary file. render TRUE, output function.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_presentation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a presentation — create_presentation","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_presentation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a presentation — create_presentation","text":"","code":"create_presentation(   stimuli = c(\"rzeka\", \"drzewo\"),   translations = c(\"river\", \"tree\"),   render = FALSE ) #> [1] \"/tmp/RtmpwoEoWO/stimuli_presentation87e7c52dbf6.Rmd\"  # with image create_presentation(   stimuli = c(     \"rzeka\", \"drzewo\",     system.file(\"extdata\", \"r-logo.png\",       package = \"phonfieldwork\"     )   ),   translations = c(\"river\", \"tree\", \"\"),   external = 3,   render = FALSE ) #> [1] \"/tmp/RtmpwoEoWO/stimuli_presentation87e223411d9.Rmd\""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_sound_play.html","id":null,"dir":"Reference","previous_headings":"","what":"Create audio play objects for html viewer — create_sound_play","title":"Create audio play objects for html viewer — create_sound_play","text":"Create audio play objects html viewer","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_sound_play.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create audio play objects for html viewer — create_sound_play","text":"","code":"create_sound_play(snd_src, text = \"&#x1f442;\")"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_sound_play.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create audio play objects for html viewer — create_sound_play","text":"snd_src string vector strings image(s) path(s). text string o vector strings displayed view link. default ear emoji (&#x1f442;).","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_sound_play.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create audio play objects for html viewer — create_sound_play","text":"string vector strings","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_sound_play.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create audio play objects for html viewer — create_sound_play","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_subannotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create boundaries in a texgrid tier — create_subannotation","title":"Create boundaries in a texgrid tier — create_subannotation","text":"Create boundaries texgrid tier","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_subannotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create boundaries in a texgrid tier — create_subannotation","text":"","code":"create_subannotation(   textgrid,   tier = 1,   new_tier_name = \"\",   n_of_annotations = 4,   each = 1,   omit_blank = TRUE,   overwrite = TRUE )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_subannotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create boundaries in a texgrid tier — create_subannotation","text":"textgrid character filename path TextGrid tier value either ordinal number tier either name tier new_tier_name name new created tier n_of_annotations number new annotations per annotation create non-negative integer. new blank annotation repeated every first, second ... times omit_blank logical. TRUE (dafault) create subannotation empy annotations. overwrite logical. TRUE (dafault) overwrites existing tier.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_subannotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create boundaries in a texgrid tier — create_subannotation","text":"string contain TextGrid. argument write TRUE, output.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_subannotation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create boundaries in a texgrid tier — create_subannotation","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_subannotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create boundaries in a texgrid tier — create_subannotation","text":"","code":"create_subannotation(system.file(\"extdata\", \"test.TextGrid\",   package = \"phonfieldwork\" ), tier = 1, overwrite = FALSE ) #>   [1] \"File type = \\\"ooTextFile\\\"\"                 #>   [2] \"Object class = \\\"TextGrid\\\"\"                #>   [3] \"\"                                           #>   [4] \"xmin = 0 \"                                  #>   [5] \"xmax = 0.6526757369614512 \"                 #>   [6] \"tiers? <exists> \"                           #>   [7] \"size = 4 \"                                  #>   [8] \"item []: \"                                  #>   [9] \"    item [1]:\"                              #>  [10] \"        class = \\\"IntervalTier\\\" \"          #>  [11] \"        name = \\\"intervals\\\" \"              #>  [12] \"        xmin = 0 \"                          #>  [13] \"        xmax = 0.6526757369614512 \"         #>  [14] \"        intervals: size = 5 \"               #>  [15] \"        intervals [1]:\"                     #>  [16] \"            xmin = 0 \"                      #>  [17] \"            xmax = 0.012465825768947203 \"   #>  [18] \"            text = \\\"\\\" \"                   #>  [19] \"        intervals [2]:\"                     #>  [20] \"            xmin = 0.012465825768947203 \"   #>  [21] \"            xmax = 0.247819135106803 \"      #>  [22] \"            text = \\\"t\\\" \"                  #>  [23] \"        intervals [3]:\"                     #>  [24] \"            xmin = 0.247819135106803 \"      #>  [25] \"            xmax = 0.39552362579469874 \"    #>  [26] \"            text = \\\"e\\\" \"                  #>  [27] \"        intervals [4]:\"                     #>  [28] \"            xmin = 0.39552362579469874 \"    #>  [29] \"            xmax = 0.5115771541923311 \"     #>  [30] \"            text = \\\"s\\\" \"                  #>  [31] \"        intervals [5]:\"                     #>  [32] \"            xmin = 0.5115771541923311 \"     #>  [33] \"            xmax = 0.6526757369614512 \"     #>  [34] \"            text = \\\"t\\\" \"                  #>  [35] \"    item [2]:\"                              #>  [36] \"        class = \\\"IntervalTier\\\" \"          #>  [37] \"        name = \\\"empty_intervals\\\" \"        #>  [38] \"        xmin = 0 \"                          #>  [39] \"        xmax = 0.6526757369614512 \"         #>  [40] \"        intervals: size = 5 \"               #>  [41] \"        intervals [1]:\"                     #>  [42] \"            xmin = 0 \"                      #>  [43] \"            xmax = 0.012465825768947203 \"   #>  [44] \"            text = \\\"\\\" \"                   #>  [45] \"        intervals [2]:\"                     #>  [46] \"            xmin = 0.012465825768947203 \"   #>  [47] \"            xmax = 0.247819135106803 \"      #>  [48] \"            text = \\\"\\\" \"                   #>  [49] \"        intervals [3]:\"                     #>  [50] \"            xmin = 0.247819135106803 \"      #>  [51] \"            xmax = 0.39552362579469874 \"    #>  [52] \"            text = \\\"\\\" \"                   #>  [53] \"        intervals [4]:\"                     #>  [54] \"            xmin = 0.39552362579469874 \"    #>  [55] \"            xmax = 0.5115771541923311 \"     #>  [56] \"            text = \\\"\\\" \"                   #>  [57] \"        intervals [5]:\"                     #>  [58] \"            xmin = 0.5115771541923311 \"     #>  [59] \"            xmax = 0.6526757369614512 \"     #>  [60] \"            text = \\\"\\\" \"                   #>  [61] \"    item [3]:\"                              #>  [62] \"        class = \\\"TextTier\\\" \"              #>  [63] \"        name = \\\"points\\\" \"                 #>  [64] \"        xmin = 0 \"                          #>  [65] \"        xmax = 0.6526757369614512 \"         #>  [66] \"        points: size = 4 \"                  #>  [67] \"        points [1]:\"                        #>  [68] \"            number = 0.012465825768947203 \" #>  [69] \"            mark = \\\"t\\\" \"                  #>  [70] \"        points [2]:\"                        #>  [71] \"            number = 0.247819135106803 \"    #>  [72] \"            mark = \\\"e\\\" \"                  #>  [73] \"        points [3]:\"                        #>  [74] \"            number = 0.39552362579469874 \"  #>  [75] \"            mark = \\\"s\\\" \"                  #>  [76] \"        points [4]:\"                        #>  [77] \"            number = 0.5115771541923311 \"   #>  [78] \"            mark = \\\"t\\\" \"                  #>  [79] \"    item [4]:\"                              #>  [80] \"        class = \\\"IntervalTier\\\" \"          #>  [81] \"        name = \\\"\\\" \"                       #>  [82] \"        xmin = 0 \"                          #>  [83] \"        xmax = 0.6526757369614512 \"         #>  [84] \"        intervals: size = 16 \"              #>  [85] \"        intervals [1]:\"                     #>  [86] \"            xmin = 0.0124658257689472 \"     #>  [87] \"            xmax = 0.0713041531034111 \"     #>  [88] \"            text = \\\"\\\" \"                   #>  [89] \"        intervals [2]:\"                     #>  [90] \"            xmin = 0.0713041531034111 \"     #>  [91] \"            xmax = 0.130142480437875 \"      #>  [92] \"            text = \\\"\\\" \"                   #>  [93] \"        intervals [3]:\"                     #>  [94] \"            xmin = 0.130142480437875 \"      #>  [95] \"            xmax = 0.188980807772339 \"      #>  [96] \"            text = \\\"\\\" \"                   #>  [97] \"        intervals [4]:\"                     #>  [98] \"            xmin = 0.188980807772339 \"      #>  [99] \"            xmax = 0.247819135106803 \"      #> [100] \"            text = \\\"\\\" \"                   #> [101] \"        intervals [5]:\"                     #> [102] \"            xmin = 0.247819135106803 \"      #> [103] \"            xmax = 0.284745257778777 \"      #> [104] \"            text = \\\"\\\" \"                   #> [105] \"        intervals [6]:\"                     #> [106] \"            xmin = 0.284745257778777 \"      #> [107] \"            xmax = 0.321671380450751 \"      #> [108] \"            text = \\\"\\\" \"                   #> [109] \"        intervals [7]:\"                     #> [110] \"            xmin = 0.321671380450751 \"      #> [111] \"            xmax = 0.358597503122725 \"      #> [112] \"            text = \\\"\\\" \"                   #> [113] \"        intervals [8]:\"                     #> [114] \"            xmin = 0.358597503122725 \"      #> [115] \"            xmax = 0.395523625794699 \"      #> [116] \"            text = \\\"\\\" \"                   #> [117] \"        intervals [9]:\"                     #> [118] \"            xmin = 0.395523625794699 \"      #> [119] \"            xmax = 0.424537007894107 \"      #> [120] \"            text = \\\"\\\" \"                   #> [121] \"        intervals [10]:\"                    #> [122] \"            xmin = 0.424537007894107 \"      #> [123] \"            xmax = 0.453550389993515 \"      #> [124] \"            text = \\\"\\\" \"                   #> [125] \"        intervals [11]:\"                    #> [126] \"            xmin = 0.453550389993515 \"      #> [127] \"            xmax = 0.482563772092923 \"      #> [128] \"            text = \\\"\\\" \"                   #> [129] \"        intervals [12]:\"                    #> [130] \"            xmin = 0.482563772092923 \"      #> [131] \"            xmax = 0.511577154192331 \"      #> [132] \"            text = \\\"\\\" \"                   #> [133] \"        intervals [13]:\"                    #> [134] \"            xmin = 0.511577154192331 \"      #> [135] \"            xmax = 0.546851799884611 \"      #> [136] \"            text = \\\"\\\" \"                   #> [137] \"        intervals [14]:\"                    #> [138] \"            xmin = 0.546851799884611 \"      #> [139] \"            xmax = 0.582126445576891 \"      #> [140] \"            text = \\\"\\\" \"                   #> [141] \"        intervals [15]:\"                    #> [142] \"            xmin = 0.582126445576891 \"      #> [143] \"            xmax = 0.617401091269171 \"      #> [144] \"            text = \\\"\\\" \"                   #> [145] \"        intervals [16]:\"                    #> [146] \"            xmin = 0.617401091269171 \"      #> [147] \"            xmax = 0.652675736961451 \"      #> [148] \"            text = \\\"\\\" \""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_viewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an annotation viewer — create_viewer","title":"Create an annotation viewer — create_viewer","text":"Creates html file table sound preview player","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_viewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an annotation viewer — create_viewer","text":"","code":"create_viewer(   audio_dir,   picture_dir = NULL,   table,   captions = NULL,   sorting_columns = NULL,   about = \"Created with the `phonfieldworks` package (Moroz 2020).\",   map = FALSE,   output_dir,   output_file = \"stimuli_viewer\",   render = TRUE )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_viewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an annotation viewer — create_viewer","text":"audio_dir path directory sounds picture_dir path directory pictures table data frame data ordered according files audio folder captions vector strings used captions picture. sorting_columns vector strings sorting result column either .Rmd file string text information: author, project, place gahtered information metadata, version viewer map logical argument, TRUE glottocode column table output_dir output directory rendered file output_file name result .html file (default stimuli_viewer) render logical argument, TRUE renders created R Markdown viewer output_dir folder, otherwise returns path temporary file .csv file.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_viewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an annotation viewer — create_viewer","text":"render FALSE, function returns path temporary file .csv file. render TRUE, output function.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/create_viewer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an annotation viewer — create_viewer","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_eaf.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe to .eaf — df_to_eaf","title":"Dataframe to .eaf — df_to_eaf","text":"Convert dataframe Elan file .exb","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_eaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataframe to .eaf — df_to_eaf","text":"","code":"df_to_eaf(df, output_file, output_dir = \"\", ref_file = \"\", mime_type = \"\")"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_eaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataframe to .eaf — df_to_eaf","text":"df R dataframe object contains columns named 'tier', 'id', 'tier_name', 'content', 'time_start', 'time_end' preferably also 'tier_type', 'stereotype', 'tier_ref', 'event_local_id', 'dependent_on' specific eaf file output_file name result .xml file output_dir output directory rendered file (defalut used spectified) ref_file filepath connected media file (obligatory) mime_type MIME type connected media file (obligatory)","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_eaf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataframe to .eaf — df_to_eaf","text":".xml file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_eaf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dataframe to .eaf — df_to_eaf","text":"Sergej Kudrjashov <xenomirant@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_eaf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataframe to .eaf — df_to_eaf","text":"","code":"df <- eaf_to_df(system.file(\"extdata\", \"test.eaf\", package = \"phonfieldwork\"))  df_to_eaf(df = df,           output_file = 'test.eaf',           ref_file = 'test.wav') #> Warning: Tier stereotypes not specified. Writing as independent tiers #> Warning: path[1]=\"/tmp/RtmpBa0pVD/phonfieldwork/reference/test.eaf\": No such file or directory"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_exb.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe to EXMARaLDA's .exb — df_to_exb","title":"Dataframe to EXMARaLDA's .exb — df_to_exb","text":"Convert dataframe EXMARaLDA's .exb","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_exb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataframe to EXMARaLDA's .exb — df_to_exb","text":"","code":"df_to_exb(   df,   name,   output_file,   output_dir = \"\",   referenced_file = \"\",   ud_meta = NULL,   speaker_table = NULL )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_exb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataframe to EXMARaLDA's .exb — df_to_exb","text":"df R dataframe object contains columns named 'tier', 'tier_name', 'content', 'time_start', 'time_end' 'id' name transcription name output_file name result .html file output_dir output directory rendered file referenced_file filepath .wav ud_meta vector ('key':'value') meta information (obligatory) speaker_table table speaker information; must include columns 'id', 'abbreviation', 'sex' (obligatory)","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_exb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataframe to EXMARaLDA's .exb — df_to_exb","text":".xml file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_exb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dataframe to EXMARaLDA's .exb — df_to_exb","text":"Valeria Buntiakova <valleriabun@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_exb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataframe to EXMARaLDA's .exb — df_to_exb","text":"","code":"meta <- c('Type of communication' = 'Fernsehinterview',           'Source' = 'Parkinson Talkshow auf BBC',           'Background information' = 'Interview mit den Beckhams',           'Code' = 'Beckhams')  speaker_data <- data.frame('id' = c('SPK0', 'SPK1', 'SPK2'),                            'abbreviation' = c('PAR', 'VIC', 'DAV'),                            'sex' = c('m', 'f', 'm'),                            'Family: Marital status' = c('Verheiratet',                                                         'Verheiratet',                                                         'Verheiratet'),                            'Birth' = c('28. März 1935 in Cudworth',                                        '14. April 1974 in Hertfordshire',                                        '2. Mail 1975 in London'),                            'Occupation' = c('Fernsehmoderator, Journalist, Autor',                                             'Sängerin',                                             'Professioneller Fußballspieler'),                            'Family: Children' = c(3, '3 Söhn, 1 Tochter', '3 Söhne, 1 Tochter'),                            'Name' = c('Michael Parkinson', 'Victoria Beckham', 'David Beckham'))  df <- exb_to_df(system.file(\"extdata\", \"demo_Beckhams.exb\", package = \"phonfieldwork\"))  df_to_exb(df = df,           name = 'Beckhams',           output_file = 'beck.xml',           referenced_file = 'beck.wav',           ud_meta = meta,           speaker_table = speaker_data) #> Warning: Missing timestamps in rows:  61 149 62 150 #> Warning: path[1]=\"/tmp/RtmpBa0pVD/phonfieldwork/reference/beck.xml\": No such file or directory"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_tier.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe to TextGrid's tier — df_to_tier","title":"Dataframe to TextGrid's tier — df_to_tier","text":"Convert dataframe Praat TextGrid.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_tier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataframe to TextGrid's tier — df_to_tier","text":"","code":"df_to_tier(df, textgrid, tier_name = \"\", overwrite = TRUE)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_tier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataframe to TextGrid's tier — df_to_tier","text":"df R dataframe object contains columns named \"content\", \"time_start\" \"time_end\" textgrid character filename path TextGrid tier_name vector contain name created tier overwrite logic argument, TRUE overwrites existing TextGrid file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_tier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataframe to TextGrid's tier — df_to_tier","text":"overwrite FALSE, function returns vector strings TextGrid. overwrite TRUE, output.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_tier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dataframe to TextGrid's tier — df_to_tier","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/df_to_tier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataframe to TextGrid's tier — df_to_tier","text":"","code":"time_start <- c(0.00000000, 0.01246583, 0.24781914, 0.39552363, 0.51157715) time_end <- c(0.01246583, 0.24781914, 0.39552363, 0.51157715, 0.65267574) content <- c(\"\", \"T\", \"E\", \"S\", \"T\") df_to_tier(my_df <- data.frame(id = 1:5, time_start, time_end, content),   system.file(\"extdata\", \"test.TextGrid\",     package = \"phonfieldwork\"   ),   overwrite = FALSE ) #>   [1] \"File type = \\\"ooTextFile\\\"\"                 #>   [2] \"Object class = \\\"TextGrid\\\"\"                #>   [3] \"\"                                           #>   [4] \"xmin = 0 \"                                  #>   [5] \"xmax = 0.6526757369614512 \"                 #>   [6] \"tiers? <exists> \"                           #>   [7] \"size = 4 \"                                  #>   [8] \"item []: \"                                  #>   [9] \"    item [1]:\"                              #>  [10] \"        class = \\\"IntervalTier\\\" \"          #>  [11] \"        name = \\\"intervals\\\" \"              #>  [12] \"        xmin = 0 \"                          #>  [13] \"        xmax = 0.6526757369614512 \"         #>  [14] \"        intervals: size = 5 \"               #>  [15] \"        intervals [1]:\"                     #>  [16] \"            xmin = 0 \"                      #>  [17] \"            xmax = 0.012465825768947203 \"   #>  [18] \"            text = \\\"\\\" \"                   #>  [19] \"        intervals [2]:\"                     #>  [20] \"            xmin = 0.012465825768947203 \"   #>  [21] \"            xmax = 0.247819135106803 \"      #>  [22] \"            text = \\\"t\\\" \"                  #>  [23] \"        intervals [3]:\"                     #>  [24] \"            xmin = 0.247819135106803 \"      #>  [25] \"            xmax = 0.39552362579469874 \"    #>  [26] \"            text = \\\"e\\\" \"                  #>  [27] \"        intervals [4]:\"                     #>  [28] \"            xmin = 0.39552362579469874 \"    #>  [29] \"            xmax = 0.5115771541923311 \"     #>  [30] \"            text = \\\"s\\\" \"                  #>  [31] \"        intervals [5]:\"                     #>  [32] \"            xmin = 0.5115771541923311 \"     #>  [33] \"            xmax = 0.6526757369614512 \"     #>  [34] \"            text = \\\"t\\\" \"                  #>  [35] \"    item [2]:\"                              #>  [36] \"        class = \\\"IntervalTier\\\" \"          #>  [37] \"        name = \\\"empty_intervals\\\" \"        #>  [38] \"        xmin = 0 \"                          #>  [39] \"        xmax = 0.6526757369614512 \"         #>  [40] \"        intervals: size = 5 \"               #>  [41] \"        intervals [1]:\"                     #>  [42] \"            xmin = 0 \"                      #>  [43] \"            xmax = 0.012465825768947203 \"   #>  [44] \"            text = \\\"\\\" \"                   #>  [45] \"        intervals [2]:\"                     #>  [46] \"            xmin = 0.012465825768947203 \"   #>  [47] \"            xmax = 0.247819135106803 \"      #>  [48] \"            text = \\\"\\\" \"                   #>  [49] \"        intervals [3]:\"                     #>  [50] \"            xmin = 0.247819135106803 \"      #>  [51] \"            xmax = 0.39552362579469874 \"    #>  [52] \"            text = \\\"\\\" \"                   #>  [53] \"        intervals [4]:\"                     #>  [54] \"            xmin = 0.39552362579469874 \"    #>  [55] \"            xmax = 0.5115771541923311 \"     #>  [56] \"            text = \\\"\\\" \"                   #>  [57] \"        intervals [5]:\"                     #>  [58] \"            xmin = 0.5115771541923311 \"     #>  [59] \"            xmax = 0.6526757369614512 \"     #>  [60] \"            text = \\\"\\\" \"                   #>  [61] \"    item [3]:\"                              #>  [62] \"        class = \\\"TextTier\\\" \"              #>  [63] \"        name = \\\"points\\\" \"                 #>  [64] \"        xmin = 0 \"                          #>  [65] \"        xmax = 0.6526757369614512 \"         #>  [66] \"        points: size = 4 \"                  #>  [67] \"        points [1]:\"                        #>  [68] \"            number = 0.012465825768947203 \" #>  [69] \"            mark = \\\"t\\\" \"                  #>  [70] \"        points [2]:\"                        #>  [71] \"            number = 0.247819135106803 \"    #>  [72] \"            mark = \\\"e\\\" \"                  #>  [73] \"        points [3]:\"                        #>  [74] \"            number = 0.39552362579469874 \"  #>  [75] \"            mark = \\\"s\\\" \"                  #>  [76] \"        points [4]:\"                        #>  [77] \"            number = 0.5115771541923311 \"   #>  [78] \"            mark = \\\"t\\\" \"                  #>  [79] \"    item [4]:\"                              #>  [80] \"        class = \\\"IntervalTier\\\" \"          #>  [81] \"        name = \\\"\\\" \"                       #>  [82] \"        xmin = 0 \"                          #>  [83] \"        xmax = 0.6526757369614512 \"         #>  [84] \"        intervals: size = 5 \"               #>  [85] \"        intervals [1]:\"                     #>  [86] \"            xmin = 0 \"                      #>  [87] \"            xmax = 0.01246583 \"             #>  [88] \"            text = \\\"\\\" \"                   #>  [89] \"        intervals [2]:\"                     #>  [90] \"            xmin = 0.01246583 \"             #>  [91] \"            xmax = 0.24781914 \"             #>  [92] \"            text = \\\"T\\\" \"                  #>  [93] \"        intervals [3]:\"                     #>  [94] \"            xmin = 0.24781914 \"             #>  [95] \"            xmax = 0.39552363 \"             #>  [96] \"            text = \\\"E\\\" \"                  #>  [97] \"        intervals [4]:\"                     #>  [98] \"            xmin = 0.39552363 \"             #>  [99] \"            xmax = 0.51157715 \"             #> [100] \"            text = \\\"S\\\" \"                  #> [101] \"        intervals [5]:\"                     #> [102] \"            xmin = 0.51157715 \"             #> [103] \"            xmax = 0.65267574 \"             #> [104] \"            text = \\\"T\\\" \""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_sound.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Oscilogram, Spectrogram and annotation — draw_sound","title":"Draw Oscilogram, Spectrogram and annotation — draw_sound","text":"Create oscilogram spectrogram plot.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_sound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Oscilogram, Spectrogram and annotation — draw_sound","text":"","code":"draw_sound(   file_name,   annotation = NULL,   from = NULL,   to = NULL,   zoom = NULL,   text_size = 1,   output_file = NULL,   title = NULL,   freq_scale = \"kHz\",   frequency_range = c(0, 5),   dynamic_range = 50,   window_length = 5,   window = \"kaiser\",   windowparameter = -1,   preemphasisf = 50,   spectrum_info = TRUE,   raven_annotation = NULL,   formant_df = NULL,   pitch = NULL,   pitch_range = c(75, 350),   intensity = NULL,   output_width = 750,   output_height = 500,   output_units = \"px\",   sounds_from_folder = NULL,   textgrids_from_folder = NULL,   pic_folder_name = \"pics\",   title_as_filename = TRUE,   prefix = NULL,   suffix = NULL,   autonumber = FALSE )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_sound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Oscilogram, Spectrogram and annotation — draw_sound","text":"file_name sound file annotation source annotation files (path TextGrid file dataframe created linguistic types, e. g. via textgrid_to_df(), eaf_to_df() functions) Time seconds start extraction. Time seconds stop extraction. zoom numeric vector zoom window time (seconds). draw whole oscilogram part spectrogram. text_size numeric, text size (default = 1). output_file name output file title title plot freq_scale string indicating type frequency scale. Supported types : \"Hz\" \"kHz\". frequency_range vector range frequencies displayed spectrogram maximum fs/2. default set 0-5 kHz. dynamic_range values greater many dB maximum displayed color window_length desired analysis window length milliseconds. window string indicating type window desired. Supported types : \"rectangular\", \"hann\", \"hamming\", \"cosine\", \"bartlett\", \"gaussian\", \"kaiser\". windowparameter parameter necessary generate window, appropriate. moment, windows require parameters Kaiser Gaussian windows. default, set 2 kaiser 0.4 gaussian windows. preemphasisf Preemphasis 6 dB per octave added frequencies specified frequency. preemphasis, set frequency higher sampling frequency. spectrum_info logical. TRUE add information window method params. raven_annotation Raven (Center Conservation Bioacoustics) style annotations (boxes spectrogram). dataframe contains time_start, time_end, freq_low freq_high columns. Optional columns colors content. formant_df dataframe formants formant_to_df() function pitch path Praat `.Pitch` file result pitch_to_df() function. variable provide data visualisation pitch contour exported Praat. pitch_range vector range frequencies displayed. default set 75-350 Hz. intensity path Praat `.Intensity` file result intensity_to_df() function. variable provide data visualisation intensity contour exported Praat. output_width width device output_height height device output_units units height width given. Can \"px\" (pixels, default), \"\" (inches), \"cm\" \"mm\". sounds_from_folder path folder multiple sound files. argument NULL, function goes files creates picture . textgrids_from_folder path folder multiple .TextGrid files. argument NULL, function goes files create picture . pic_folder_name name folder, pictures stored case sounds_from_folder argument NULL title_as_filename logical. true adds filename title picture prefix prefix file names created pictures case sounds_from_folder argument NULL suffix suffix file names created pictures case sounds_from_folder argument NULL autonumber TRUE automatically add number extracted sound file_name. Prevents creating duplicated files wrong sorting.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_sound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Oscilogram, Spectrogram and annotation — draw_sound","text":"Oscilogram spectrogram plot (possibly TextGrid annotation).","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_sound.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Oscilogram, Spectrogram and annotation — draw_sound","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_sound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Oscilogram, Spectrogram and annotation — draw_sound","text":"","code":"if (FALSE) { draw_sound(system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"))  draw_sound(   system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"),   system.file(\"extdata\", \"test.TextGrid\",     package = \"phonfieldwork\"   ) )  draw_sound(system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"),   system.file(\"extdata\", \"test.TextGrid\", package = \"phonfieldwork\"),   pitch = system.file(\"extdata\", \"test.Pitch\",     package = \"phonfieldwork\"   ),   pitch_range = c(50, 200) ) draw_sound(system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"),   system.file(\"extdata\", \"test.TextGrid\", package = \"phonfieldwork\"),   pitch = system.file(\"extdata\", \"test.Pitch\",     package = \"phonfieldwork\"   ),   pitch_range = c(50, 200),   intensity = intensity_to_df(system.file(\"extdata\", \"test.Intensity\",     package = \"phonfieldwork\"   )) ) draw_sound(system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\"),   formant_df = formant_to_df(system.file(\"extdata\", \"e.Formant\",     package = \"phonfieldwork\"   )) ) }"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_spectrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw spectrograms — draw_spectrogram","title":"Draw spectrograms — draw_spectrogram","text":"function slightly changed phonTools::spectrogram(). Argument description copied phonTools::spectrogram().","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_spectrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw spectrograms — draw_spectrogram","text":"","code":"draw_spectrogram(   sound,   fs = 22050,   text_size = 1,   window_length = 5,   dynamic_range = 50,   window = \"kaiser\",   windowparameter = -1,   freq_scale = \"kHz\",   spectrum_info = TRUE,   timestep = -1000,   padding = 10,   preemphasisf = 50,   frequency_range = c(0, 5),   nlevels = dynamic_range,   x_axis = TRUE,   title = NULL,   raven_annotation = NULL,   formant_df = NULL )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_spectrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw spectrograms — draw_spectrogram","text":"sound Either numeric vector representing sequence samples taken sound wave sound object created loadsound() makesound() functions. fs sampling frequency Hz. sound object passed need specified. text_size numeric, text size (default = 1). window_length desired analysis window length milliseconds. dynamic_range Values greater many dB maximum displayed color. window string indicating type window desired. Supported types : rectangular, hann, hamming, cosine, bartlett, gaussian, kaiser. windowparameter parameter necessary generate window, appropriate. moment, windows require parameters Kaiser Gaussian windows. default, set 2 kaiser 0.4 gaussian windows. freq_scale string indicating type frequency scale. Supported types : \"Hz\" \"kHz\". spectrum_info logical. TRUE add information window method params. timestep negative value given, -N, N equally-spaced time steps calculated. positive number given, spacing adjacent analyses, milliseconds. padding amount zero padding window, measured units window length. example, window 50 points, padding = 10, 500 zeros appended window. preemphasisf Preemphasis 6 dB per octave added frequencies specified frequency. preemphasis, set frequency higher sampling frequency. frequency_range vector range frequencies displayed spectrogram maximum fs/2. set 0-5 kHz default. nlevels number divisions used z-axis spectrogram. default set equal dynamic range, meaning single color represents 1 dB z-axis. x_axis TRUE draw x axis. title Character title. raven_annotation Raven (Center Conservation Bioacoustics) style annotations (boxes spectrogram). dataframe contains time_start, time_end, freq_low freq_high columns. Optional columns colors content. formant_df dataframe formants formant_to_df() function","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_spectrogram.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw spectrograms — draw_spectrogram","text":"Santiago Barreda <sbarreda@ucdavis.edu>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/draw_spectrogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw spectrograms — draw_spectrogram","text":"","code":"if (FALSE) { draw_spectrogram(system.file(\"extdata\", \"test.wav\",   package = \"phonfieldwork\" )) }"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/eaf_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"ELAN's .eaf file to dataframe — eaf_to_df","title":"ELAN's .eaf file to dataframe — eaf_to_df","text":"Convert .eaf file ELAN dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/eaf_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ELAN's .eaf file to dataframe — eaf_to_df","text":"","code":"eaf_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/eaf_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ELAN's .eaf file to dataframe — eaf_to_df","text":"file_name string filename path .eaf file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/eaf_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ELAN's .eaf file to dataframe — eaf_to_df","text":"dataframe columns:  tier, id, content, tier_name, tier_type, tier_ref, event_local_id,  dependent_on, time_start, time_end, source, media_url attributes: MEDIA_URL, MIME_TYPE, RELATIVE_MEDIA_URL.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/eaf_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ELAN's .eaf file to dataframe — eaf_to_df","text":"George Moroz <agricolamz@gmail.com> Kudrjashov Sergej <xenomirant@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/eaf_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ELAN's .eaf file to dataframe — eaf_to_df","text":"","code":"eaf_to_df(system.file(\"extdata\", \"test.eaf\", package = \"phonfieldwork\")) #>    tier id                                       content       tier_name #> 12    1  1                                                     intervals #> 13    2  1                                               empty_intervals #> 14    1  2                                             t       intervals #> 1     2  2                                             C empty_intervals #> 8     3  1 this is just a basic sentence nothing special        sentence #> 2     1  3                                             e       intervals #> 3     2  3                                             V empty_intervals #> 4     1  4                                             s       intervals #> 5     2  4                                             C empty_intervals #> 6     1  5                                             t       intervals #> 7     2  5                                             C empty_intervals #> 10    1  6                                                     intervals #> 11    2  6                                               empty_intervals #> 9     3  2                             one more sentence        sentence #>    tier_type id_ tier_ref event_local_id dependent_on time_start time_end #> 12     praat   1     <NA>             a1         <NA>      0.000    0.012 #> 13     praat   7     <NA>             a7         <NA>      0.000    0.012 #> 14     praat   2     <NA>             a2         <NA>      0.012    0.248 #> 1      praat   8     <NA>             a8         <NA>      0.012    0.248 #> 8      praat  13     <NA>            a13         <NA>      0.017    9.376 #> 2      praat   3     <NA>             a3         <NA>      0.248    0.396 #> 3      praat   9     <NA>             a9         <NA>      0.248    0.396 #> 4      praat   4     <NA>             a4         <NA>      0.396    0.512 #> 5      praat  10     <NA>            a10         <NA>      0.396    0.512 #> 6      praat   5     <NA>             a5         <NA>      0.512    0.652 #> 7      praat  11     <NA>            a11         <NA>      0.512    0.652 #> 10     praat   6     <NA>             a6         <NA>      0.652  300.000 #> 11     praat  12     <NA>            a12         <NA>      0.652  300.000 #> 9      praat  14     <NA>            a14         <NA>     11.690   26.461 #>      source media_url #> 12 test.eaf      <NA> #> 13 test.eaf      <NA> #> 14 test.eaf      <NA> #> 1  test.eaf      <NA> #> 8  test.eaf      <NA> #> 2  test.eaf      <NA> #> 3  test.eaf      <NA> #> 4  test.eaf      <NA> #> 5  test.eaf      <NA> #> 6  test.eaf      <NA> #> 7  test.eaf      <NA> #> 10 test.eaf      <NA> #> 11 test.eaf      <NA> #> 9  test.eaf      <NA>"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/exb_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"EXMARaLDA's .exb file to dataframe — exb_to_df","title":"EXMARaLDA's .exb file to dataframe — exb_to_df","text":"Convert .exb file EXMARaLDA dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/exb_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EXMARaLDA's .exb file to dataframe — exb_to_df","text":"","code":"exb_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/exb_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EXMARaLDA's .exb file to dataframe — exb_to_df","text":"file_name string filename path .exb file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/exb_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EXMARaLDA's .exb file to dataframe — exb_to_df","text":"dataframe columns:  tier, id, content, tier_name, tier_type, tier_category, tier_speaker, time_start, time_end, source.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/exb_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EXMARaLDA's .exb file to dataframe — exb_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/exb_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EXMARaLDA's .exb file to dataframe — exb_to_df","text":"","code":"exb_to_df(system.file(\"extdata\", \"test.exb\", package = \"phonfieldwork\")) #>   tier id content tier_name tier_type tier_category tier_speaker time_start #> 3    1  1       t     X [v]         t             v         SPK0 0.06908955 #> 1    1  2       e     X [v]         t             v         SPK0 0.24989836 #> 5    1  3       s     X [v]         t             v         SPK0 0.38072750 #> 7    1  4       t     X [v]         t             v         SPK0 0.40424735 #> 4    2  1       C     X [v]         a             v         SPK0 0.06908955 #> 2    2  2       V     X [v]         a             v         SPK0 0.24989836 #> 6    2  3       C     X [v]         a             v         SPK0 0.38072750 #> 8    2  4       C     X [v]         a             v         SPK0 0.40424735 #>    time_end   source #> 3 0.2498984 test.exb #> 1 0.3807275 test.exb #> 5 0.4042473 test.exb #> 7 0.6526757 test.exb #> 4 0.2498984 test.exb #> 2 0.3807275 test.exb #> 6 0.4042473 test.exb #> 8 0.6526757 test.exb"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/extract_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract intervals — extract_intervals","title":"Extract intervals — extract_intervals","text":"Extract sound according non-empty annotated intervals TextGrid create soundfiles correspondent names.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/extract_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract intervals — extract_intervals","text":"","code":"extract_intervals(   file_name,   textgrid,   tier = 1,   prefix = NULL,   suffix = NULL,   autonumber = TRUE,   path )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/extract_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract intervals — extract_intervals","text":"file_name path soundfile textgrid path TextGrid tier tier number name used base extraction names prefix character vector containing prefix(es) file names suffix character vector containing suffix(es) file names autonumber TRUE automatically add number extracted sound file_name. Prevents creating duplicated files wrong sorting. path path directory create extracted soundfiles.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/extract_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract intervals — extract_intervals","text":"output","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/extract_intervals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract intervals — extract_intervals","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/extract_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract intervals — extract_intervals","text":"","code":"# create two files in a temprary folder \"test_folder\" s <- system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\") tdir <- tempdir() file.copy(s, tdir) #> [1] FALSE  # Extract intervals according the TextGrid into the path extract_intervals(   file_name = paste0(tdir, \"/test.wav\"),   textgrid = system.file(\"extdata\", \"test.TextGrid\",     package = \"phonfieldwork\"   ),   path = tdir )  list.files(tdir) #>  [1] \"1_t.wav\"                                #>  [2] \"2_e.wav\"                                #>  [3] \"3_s.wav\"                                #>  [4] \"4_t.wav\"                                #>  [5] \"bslib-0d0ca9323b2066622661ec758fe71f22\" #>  [6] \"concatenated.TextGrid\"                  #>  [7] \"concatenated.wav\"                       #>  [8] \"downlit\"                                #>  [9] \"file87e510101b5.TextGrid\"               #> [10] \"file87e7ff6caa7\"                        #> [11] \"post.TextGrid\"                          #> [12] \"post.wav\"                               #> [13] \"stimuli_presentation87e223411d9.Rmd\"    #> [14] \"stimuli_presentation87e7c52dbf6.Rmd\"    #> [15] \"test.TextGrid\"                          #> [16] \"test.wav\"                               # [1] \"e-2.wav\" \"s-3.wav\" \"t-1.wav\" \"t-4.wav\" \"test.wav\""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/flextext_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"FLEX's .flextext file to dataframe — flextext_to_df","title":"FLEX's .flextext file to dataframe — flextext_to_df","text":"Convert .flextext file FLEX dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/flextext_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FLEX's .flextext file to dataframe — flextext_to_df","text":"","code":"flextext_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/flextext_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FLEX's .flextext file to dataframe — flextext_to_df","text":"file_name string filename path .flextext file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/flextext_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FLEX's .flextext file to dataframe — flextext_to_df","text":"dataframe columns: p_id, s_id, w_id, txt, cf, hn, gls, msa, morph, word, phrase, paragraph, free_trans, text, text_title","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/flextext_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FLEX's .flextext file to dataframe — flextext_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/formant_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Praat Formant object to dataframe — formant_to_df","title":"Praat Formant object to dataframe — formant_to_df","text":"Convert Praat Formant object dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/formant_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Praat Formant object to dataframe — formant_to_df","text":"","code":"formant_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/formant_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Praat Formant object to dataframe — formant_to_df","text":"file_name string filename path Formant file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/formant_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Praat Formant object to dataframe — formant_to_df","text":"dataframe columns:  time_start, time_end, frequency, bandwidth formant","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/formant_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Praat Formant object to dataframe — formant_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/formant_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Praat Formant object to dataframe — formant_to_df","text":"","code":"formant_to_df(system.file(\"extdata\", \"e.Formant\", package = \"phonfieldwork\")) #>     formant frequency  bandwidth time_start  time_end #> 1         1  456.0268  356.83720  0.2478191 0.2478191 #> 2         2 1583.7510   92.47515  0.2478191 0.2478191 #> 3         3 2687.2664  377.02274  0.2478191 0.2478191 #> 4         4 3242.8282  221.95285  0.2478191 0.2478191 #> 5         5 4212.0833  512.11404  0.2478191 0.2478191 #> 6         6 5129.2293  513.73699  0.2478191 0.2478191 #> 7         7 6496.0495  350.42612  0.2478191 0.2478191 #> 8         1  522.7598  174.96921  0.2542411 0.2542411 #> 9         2 1592.1024  113.21033  0.2542411 0.2542411 #> 10        3 2787.4831  447.27529  0.2542411 0.2542411 #> 11        4 3218.6576  296.44401  0.2542411 0.2542411 #> 12        5 3965.7476  951.47632  0.2542411 0.2542411 #> 13        6 5018.5024  392.28335  0.2542411 0.2542411 #> 14        7 6506.9328  222.75353  0.2542411 0.2542411 #> 15        1  531.1308  181.11008  0.2606630 0.2606630 #> 16        2 1492.8235  202.92326  0.2606630 0.2606630 #> 17        3 2646.6108  302.67268  0.2606630 0.2606630 #> 18        4 3272.2169  130.88637  0.2606630 0.2606630 #> 19        5 4185.6739  839.46044  0.2606630 0.2606630 #> 20        6 4977.5900  710.81435  0.2606630 0.2606630 #> 21        7 6463.8272  289.65734  0.2606630 0.2606630 #> 22        1  511.1859  170.07839  0.2670849 0.2670849 #> 23        2 1430.3861  259.55836  0.2670849 0.2670849 #> 24        3 2616.7040  211.62401  0.2670849 0.2670849 #> 25        4 3280.1406  129.07408  0.2670849 0.2670849 #> 26        5 4280.4858  418.03457  0.2670849 0.2670849 #> 27        6 5210.2389 2218.61660  0.2670849 0.2670849 #> 28        7 6337.1627  298.77994  0.2670849 0.2670849 #> 29        1  500.3578  146.73969  0.2735069 0.2735069 #> 30        2 1426.6343  270.73676  0.2735069 0.2735069 #> 31        3 2654.6770  227.60474  0.2735069 0.2735069 #> 32        4 3221.3294  158.38873  0.2735069 0.2735069 #> 33        5 4340.5421  795.45955  0.2735069 0.2735069 #> 34        6 4886.8379 1613.24397  0.2735069 0.2735069 #> 35        7 6284.0367  263.95620  0.2735069 0.2735069 #> 36        1  489.8424  131.15756  0.2799288 0.2799288 #> 37        2 1438.7198  261.85357  0.2799288 0.2799288 #> 38        3 2701.7167  212.54262  0.2799288 0.2799288 #> 39        4 3239.2142  106.68104  0.2799288 0.2799288 #> 40        5 4432.5132 2548.16259  0.2799288 0.2799288 #> 41        6 4707.3121  807.80303  0.2799288 0.2799288 #> 42        7 6352.9772  325.26443  0.2799288 0.2799288 #> 43        1  476.4390  104.32876  0.2863507 0.2863507 #> 44        2 1449.1246  264.97453  0.2863507 0.2863507 #> 45        3 2720.2632  164.16018  0.2863507 0.2863507 #> 46        4 3244.6550   78.75373  0.2863507 0.2863507 #> 47        5 4556.6008  573.78026  0.2863507 0.2863507 #> 48        6 6259.9379  138.75210  0.2863507 0.2863507 #> 49        1  467.3317  119.70250  0.2927727 0.2927727 #> 50        2 1477.2665  174.08099  0.2927727 0.2927727 #> 51        3 2749.5708  215.25216  0.2927727 0.2927727 #> 52        4 3268.0917   97.76517  0.2927727 0.2927727 #> 53        5 4539.7366  395.14604  0.2927727 0.2927727 #> 54        6 6250.5205  206.39197  0.2927727 0.2927727 #> 55        7 6750.1000 1878.77844  0.2927727 0.2927727 #> 56        1  470.2906  137.89937  0.2991946 0.2991946 #> 57        2 1482.8939  141.30470  0.2991946 0.2991946 #> 58        3 2784.1336  277.80092  0.2991946 0.2991946 #> 59        4 3292.8608  137.63712  0.2991946 0.2991946 #> 60        5 4527.1785  364.10680  0.2991946 0.2991946 #> 61        6 6170.4039  196.57693  0.2991946 0.2991946 #> 62        1  452.8574  214.72420  0.3056165 0.3056165 #> 63        2 1435.9957  181.66884  0.3056165 0.3056165 #> 64        3 2764.0445  236.85698  0.3056165 0.3056165 #> 65        4 3285.4198  195.12971  0.3056165 0.3056165 #> 66        5 4525.2731  344.93079  0.3056165 0.3056165 #> 67        6 6142.8837  146.28380  0.3056165 0.3056165 #> 68        1  428.1779  176.32680  0.3120385 0.3120385 #> 69        2 1464.8001  185.09887  0.3120385 0.3120385 #> 70        3 2780.3144  337.45544  0.3120385 0.3120385 #> 71        4 3244.5271  328.84809  0.3120385 0.3120385 #> 72        5 4526.5693  512.58018  0.3120385 0.3120385 #> 73        6 5088.9818 5195.03664  0.3120385 0.3120385 #> 74        7 6139.5716  186.89316  0.3120385 0.3120385 #> 75        1  425.7703  150.44303  0.3184604 0.3184604 #> 76        2 1480.5255  134.16292  0.3184604 0.3184604 #> 77        3 2843.8933  217.30595  0.3184604 0.3184604 #> 78        4 3368.6585  338.20796  0.3184604 0.3184604 #> 79        5 4475.9374  558.85437  0.3184604 0.3184604 #> 80        6 6134.3343  151.63410  0.3184604 0.3184604 #> 81        1  445.0216  118.89188  0.3248823 0.3248823 #> 82        2 1465.8695  156.99282  0.3248823 0.3248823 #> 83        3 2857.5524  244.92819  0.3248823 0.3248823 #> 84        4 3371.0477  359.37752  0.3248823 0.3248823 #> 85        5 4374.5704 1049.47654  0.3248823 0.3248823 #> 86        6 4859.9565 2888.25328  0.3248823 0.3248823 #> 87        7 6115.9732  181.46981  0.3248823 0.3248823 #> 88        1  433.5071  117.34682  0.3313043 0.3313043 #> 89        2 1464.1320  200.92948  0.3313043 0.3313043 #> 90        3 2737.4133  208.66602  0.3313043 0.3313043 #> 91        4 3373.3562  226.49617  0.3313043 0.3313043 #> 92        5 4229.8319 1645.39551  0.3313043 0.3313043 #> 93        6 4941.6725 1310.26891  0.3313043 0.3313043 #> 94        7 6160.4052  285.36263  0.3313043 0.3313043 #> 95        1  414.3959  107.44819  0.3377262 0.3377262 #> 96        2 1441.7589  224.56791  0.3377262 0.3377262 #> 97        3 2698.0740  144.96627  0.3377262 0.3377262 #> 98        4 3342.8257  260.31623  0.3377262 0.3377262 #> 99        5 4192.0441  949.59798  0.3377262 0.3377262 #> 100       6 4966.7278 1142.49640  0.3377262 0.3377262 #> 101       7 6192.7764  225.99011  0.3377262 0.3377262 #> 102       1  392.5755  107.50502  0.3441482 0.3441482 #> 103       2 1446.3343  315.14269  0.3441482 0.3441482 #> 104       3 2763.4804  201.67838  0.3441482 0.3441482 #> 105       4 3363.2284  319.89317  0.3441482 0.3441482 #> 106       5 4322.1800  551.87898  0.3441482 0.3441482 #> 107       6 5077.1668 2450.86003  0.3441482 0.3441482 #> 108       7 6241.3305  380.74447  0.3441482 0.3441482 #> 109       1  393.2230   91.09265  0.3505701 0.3505701 #> 110       2 1539.7121  231.89243  0.3505701 0.3505701 #> 111       3 2892.7441  287.02347  0.3505701 0.3505701 #> 112       4 3437.8559  228.46097  0.3505701 0.3505701 #> 113       5 4383.7100  487.02178  0.3505701 0.3505701 #> 114       6 5603.9939 1011.90070  0.3505701 0.3505701 #> 115       7 6654.1322  156.84038  0.3505701 0.3505701 #> 116       1  393.6136   85.08050  0.3569920 0.3569920 #> 117       2 1565.0518  181.54575  0.3569920 0.3569920 #> 118       3 2909.1611  267.15310  0.3569920 0.3569920 #> 119       4 3463.2648  174.42217  0.3569920 0.3569920 #> 120       5 4333.6095  404.89308  0.3569920 0.3569920 #> 121       6 5621.3771  559.38415  0.3569920 0.3569920 #> 122       7 6659.4945  134.53449  0.3569920 0.3569920 #> 123       1  379.5654   67.69051  0.3634140 0.3634140 #> 124       2 1552.0700   73.68393  0.3634140 0.3634140 #> 125       3 2893.0109  224.06831  0.3634140 0.3634140 #> 126       4 3481.4178  129.57149  0.3634140 0.3634140 #> 127       5 4352.7835  397.70896  0.3634140 0.3634140 #> 128       6 5480.6828  901.54840  0.3634140 0.3634140 #> 129       7 6609.3069  197.29315  0.3634140 0.3634140 #> 130       1  393.6533   98.12569  0.3698359 0.3698359 #> 131       2 1535.5246   74.67140  0.3698359 0.3698359 #> 132       3 2841.4730  197.27752  0.3698359 0.3698359 #> 133       4 3486.9978  180.04697  0.3698359 0.3698359 #> 134       5 4353.7219  355.14842  0.3698359 0.3698359 #> 135       6 5526.4353  631.32473  0.3698359 0.3698359 #> 136       7 6542.9580  288.02210  0.3698359 0.3698359 #> 137       1  391.1719  148.46267  0.3762578 0.3762578 #> 138       2 1533.3791   98.01436  0.3762578 0.3762578 #> 139       3 2784.9684  200.97864  0.3762578 0.3762578 #> 140       4 3519.0867  264.90113  0.3762578 0.3762578 #> 141       5 4343.8521  399.54397  0.3762578 0.3762578 #> 142       6 5740.3169  926.08643  0.3762578 0.3762578 #> 143       7 6792.2428 1246.06613  0.3762578 0.3762578 #> 144       1  393.7035  209.47029  0.3826798 0.3826798 #> 145       2 1541.4901  115.60825  0.3826798 0.3826798 #> 146       3 2777.1712  153.90280  0.3826798 0.3826798 #> 147       4 3559.4549  146.02987  0.3826798 0.3826798 #> 148       5 4328.2190  296.28382  0.3826798 0.3826798 #> 149       6 5793.0453  511.95984  0.3826798 0.3826798 #> 150       7 6652.9152  453.38843  0.3826798 0.3826798 #> 151       1  424.7943  186.02259  0.3891017 0.3891017 #> 152       2 1556.4511   89.78829  0.3891017 0.3891017 #> 153       3 2773.3249   85.81939  0.3891017 0.3891017 #> 154       4 3584.3118  110.12492  0.3891017 0.3891017 #> 155       5 4421.5590  324.61037  0.3891017 0.3891017 #> 156       6 5848.1359  539.88807  0.3891017 0.3891017 #> 157       7 6553.5071  428.12789  0.3891017 0.3891017 #> 158       1  385.0029   91.53917  0.3955236 0.3955236 #> 159       2 1558.1007  202.24438  0.3955236 0.3955236 #> 160       3 2786.7076  124.34035  0.3955236 0.3955236 #> 161       4 3663.0912  238.35852  0.3955236 0.3955236 #> 162       5 4520.1931  424.32643  0.3955236 0.3955236 #> 163       6 5899.4723  631.33952  0.3955236 0.3955236 #> 164       7 6569.8083  759.67946  0.3955236 0.3955236"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_sound_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file(s) duration — get_sound_duration","title":"Get file(s) duration — get_sound_duration","text":"Calculate sound(s) duration.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_sound_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file(s) duration — get_sound_duration","text":"","code":"get_sound_duration(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_sound_duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file(s) duration — get_sound_duration","text":"file_name sound file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_sound_duration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get file(s) duration — get_sound_duration","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_sound_duration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file(s) duration — get_sound_duration","text":"","code":"get_sound_duration(   system.file(\"extdata\", \"test.wav\", package = \"phonfieldwork\") ) #>       file  duration #> 1 test.wav 0.6526757"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_textgrid_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract TextGrid names — get_textgrid_names","title":"Extract TextGrid names — get_textgrid_names","text":"Extract TextGrid names.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_textgrid_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract TextGrid names — get_textgrid_names","text":"","code":"get_textgrid_names(textgrid)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_textgrid_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract TextGrid names — get_textgrid_names","text":"textgrid path TextGrid","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_textgrid_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract TextGrid names — get_textgrid_names","text":"return vector tier names given TextGrid","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_textgrid_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract TextGrid names — get_textgrid_names","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/get_textgrid_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract TextGrid names — get_textgrid_names","text":"","code":"get_textgrid_names(system.file(\"extdata\", \"test.TextGrid\",   package = \"phonfieldwork\" )) #> [1] \"intervals\"       \"empty_intervals\" \"points\""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/intensity_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Praat Intensity tier to dataframe — intensity_to_df","title":"Praat Intensity tier to dataframe — intensity_to_df","text":"Convert Praat Intensity tier dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/intensity_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Praat Intensity tier to dataframe — intensity_to_df","text":"","code":"intensity_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/intensity_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Praat Intensity tier to dataframe — intensity_to_df","text":"file_name string filename path Intensity tier","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/intensity_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Praat Intensity tier to dataframe — intensity_to_df","text":"dataframe columns:  time_start, time_end, Intensity","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/intensity_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Praat Intensity tier to dataframe — intensity_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/intensity_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Praat Intensity tier to dataframe — intensity_to_df","text":"","code":"intensity_to_df(system.file(\"extdata\", \"test.Intensity\", package = \"phonfieldwork\")) #>     time_start    time_end intensity #> 1  0.000000000 0.000000000  39.30749 #> 2  0.008940764 0.008940764  38.87412 #> 3  0.017881527 0.017881527  38.57424 #> 4  0.026822291 0.026822291  37.93917 #> 5  0.035763054 0.035763054  39.22305 #> 6  0.044703818 0.044703818  40.04061 #> 7  0.053644581 0.053644581  38.85294 #> 8  0.062585345 0.062585345  36.54414 #> 9  0.071526108 0.071526108  40.37141 #> 10 0.080466872 0.080466872  47.55616 #> 11 0.089407635 0.089407635  56.62113 #> 12 0.098348399 0.098348399  60.88946 #> 13 0.107289162 0.107289162  61.37729 #> 14 0.116229926 0.116229926  59.38835 #> 15 0.125170689 0.125170689  56.96737 #> 16 0.134111453 0.134111453  55.55835 #> 17 0.143052216 0.143052216  54.26911 #> 18 0.151992980 0.151992980  52.50135 #> 19 0.160933743 0.160933743  51.27701 #> 20 0.169874507 0.169874507  50.54501 #> 21 0.178815270 0.178815270  50.67041 #> 22 0.187756034 0.187756034  51.64555 #> 23 0.196696797 0.196696797  50.55749 #> 24 0.205637561 0.205637561  50.53060 #> 25 0.214578324 0.214578324  52.51058 #> 26 0.223519088 0.223519088  54.85600 #> 27 0.232459852 0.232459852  61.17698 #> 28 0.241400615 0.241400615  65.93068 #> 29 0.250341379 0.250341379  68.14527 #> 30 0.259282142 0.259282142  68.94030 #> 31 0.268222906 0.268222906  69.47599 #> 32 0.277163669 0.277163669  69.66139 #> 33 0.286104433 0.286104433  69.35156 #> 34 0.295045196 0.295045196  69.12312 #> 35 0.303985960 0.303985960  69.41106 #> 36 0.312926723 0.312926723  69.74102 #> 37 0.321867487 0.321867487  69.52651 #> 38 0.330808250 0.330808250  68.86931 #> 39 0.339749014 0.339749014  68.23661 #> 40 0.348689777 0.348689777  68.17743 #> 41 0.357630541 0.357630541  67.71186 #> 42 0.366571304 0.366571304  66.70133 #> 43 0.375512068 0.375512068  65.77517 #> 44 0.384452831 0.384452831  65.40704 #> 45 0.393393595 0.393393595  64.84207 #> 46 0.402334358 0.402334358  63.81003 #> 47 0.411275122 0.411275122  63.33876 #> 48 0.420215885 0.420215885  62.76678 #> 49 0.429156649 0.429156649  61.62731 #> 50 0.438097412 0.438097412  59.56992 #> 51 0.447038176 0.447038176  58.34945 #> 52 0.455978940 0.455978940  58.61335 #> 53 0.464919703 0.464919703  58.46972 #> 54 0.473860467 0.473860467  58.35225 #> 55 0.482801230 0.482801230  58.60761 #> 56 0.491741994 0.491741994  58.54995 #> 57 0.500682757 0.500682757  58.98097 #> 58 0.509623521 0.509623521  59.06485 #> 59 0.518564284 0.518564284  57.20696 #> 60 0.527505048 0.527505048  56.23815 #> 61 0.536445811 0.536445811  55.88090 #> 62 0.545386575 0.545386575  53.39294 #> 63 0.554327338 0.554327338  50.74157 #> 64 0.563268102 0.563268102  51.23953 #> 65 0.572208865 0.572208865  52.11645 #> 66 0.581149629 0.581149629  51.88973 #> 67 0.590090392 0.590090392  51.05982 #> 68 0.599031156 0.599031156  50.36096 #> 69 0.607971919 0.607971919  50.56470 #> 70 0.616912683 0.616912683  51.59961 #> 71 0.625853446 0.625853446  51.62710 #> 72 0.634794210 0.634794210  50.68025 #> 73 0.643734973 0.643734973  49.64369 #> 74 0.652675737 0.652675737  48.73534"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/pitch_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Praat Pitch tier to dataframe — pitch_to_df","title":"Praat Pitch tier to dataframe — pitch_to_df","text":"Convert Praat Pitch tier dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/pitch_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Praat Pitch tier to dataframe — pitch_to_df","text":"","code":"pitch_to_df(file_name, candidates = \"\")"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/pitch_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Praat Pitch tier to dataframe — pitch_to_df","text":"file_name string filename path Pitch tier candidates Praat Pitch tier contains multiple candidates time slice, use value \"\" want get ","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/pitch_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Praat Pitch tier to dataframe — pitch_to_df","text":"dataframe columns:  time_start, time_end, frequency , candidates = \"\", candidate_id strength","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/pitch_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Praat Pitch tier to dataframe — pitch_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/pitch_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Praat Pitch tier to dataframe — pitch_to_df","text":"","code":"pitch_to_df(system.file(\"extdata\", \"test.Pitch\", package = \"phonfieldwork\")) #>    frequency time_start   time_end #> 1         NA 0.00000000 0.00000000 #> 2         NA 0.01069960 0.01069960 #> 3         NA 0.02139920 0.02139920 #> 4         NA 0.03209881 0.03209881 #> 5         NA 0.04279841 0.04279841 #> 6         NA 0.05349801 0.05349801 #> 7         NA 0.06419761 0.06419761 #> 8         NA 0.07489722 0.07489722 #> 9         NA 0.08559682 0.08559682 #> 10        NA 0.09629642 0.09629642 #> 11        NA 0.10699602 0.10699602 #> 12        NA 0.11769562 0.11769562 #> 13        NA 0.12839523 0.12839523 #> 14        NA 0.13909483 0.13909483 #> 15        NA 0.14979443 0.14979443 #> 16        NA 0.16049403 0.16049403 #> 17        NA 0.17119364 0.17119364 #> 18        NA 0.18189324 0.18189324 #> 19        NA 0.19259284 0.19259284 #> 20        NA 0.20329244 0.20329244 #> 21        NA 0.21399204 0.21399204 #> 22        NA 0.22469165 0.22469165 #> 23 146.61622 0.23539125 0.23539125 #> 24 144.76135 0.24609085 0.24609085 #> 25 138.85260 0.25679045 0.25679045 #> 26 130.18431 0.26749006 0.26749006 #> 27 124.02896 0.27818966 0.27818966 #> 28 118.84340 0.28888926 0.28888926 #> 29 113.51198 0.29958886 0.29958886 #> 30 109.37077 0.31028847 0.31028847 #> 31 106.92832 0.32098807 0.32098807 #> 32 104.62232 0.33168767 0.33168767 #> 33 104.13490 0.34238727 0.34238727 #> 34 101.50702 0.35308687 0.35308687 #> 35 100.47670 0.36378648 0.36378648 #> 36 101.28989 0.37448608 0.37448608 #> 37  99.80511 0.38518568 0.38518568 #> 38        NA 0.39588528 0.39588528 #> 39        NA 0.40658489 0.40658489 #> 40        NA 0.41728449 0.41728449 #> 41        NA 0.42798409 0.42798409 #> 42        NA 0.43868369 0.43868369 #> 43        NA 0.44938329 0.44938329 #> 44        NA 0.46008290 0.46008290 #> 45        NA 0.47078250 0.47078250 #> 46        NA 0.48148210 0.48148210 #> 47        NA 0.49218170 0.49218170 #> 48        NA 0.50288131 0.50288131 #> 49        NA 0.51358091 0.51358091 #> 50        NA 0.52428051 0.52428051 #> 51        NA 0.53498011 0.53498011 #> 52        NA 0.54567971 0.54567971 #> 53        NA 0.55637932 0.55637932 #> 54        NA 0.56707892 0.56707892 #> 55        NA 0.57777852 0.57777852 #> 56        NA 0.58847812 0.58847812 #> 57        NA 0.59917773 0.59917773 #> 58        NA 0.60987733 0.60987733 #> 59        NA 0.62057693 0.62057693 #> 60        NA 0.63127653 0.63127653 #> 61        NA 0.64197613 0.64197613 #> 62        NA 0.65267574 0.65267574"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/read_from_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Read multiple files from the folder — read_from_folder","title":"Read multiple files from the folder — read_from_folder","text":"function reads multiple files folder. first argument path, second argument type files read.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/read_from_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read multiple files from the folder — read_from_folder","text":"","code":"read_from_folder(path, type = \"textgrid\")"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/read_from_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read multiple files from the folder — read_from_folder","text":"path folder multiple sound files. type one following: \"duration\", \"audacity\", \"eaf\", \"exb\", \"flextext\", \"formant\", \"intensity\", \"picth\", \"srt\", \"textgrid\"","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/read_from_folder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read multiple files from the folder — read_from_folder","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/read_from_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read multiple files from the folder — read_from_folder","text":"","code":"read_from_folder(system.file(\"extdata\", package = \"phonfieldwork\"), \"eaf\") #>    tier id                                       content       tier_name #> 12    1  1                                                     intervals #> 13    2  1                                               empty_intervals #> 14    1  2                                             t       intervals #> 1     2  2                                             C empty_intervals #> 8     3  1 this is just a basic sentence nothing special        sentence #> 2     1  3                                             e       intervals #> 3     2  3                                             V empty_intervals #> 4     1  4                                             s       intervals #> 5     2  4                                             C empty_intervals #> 6     1  5                                             t       intervals #> 7     2  5                                             C empty_intervals #> 10    1  6                                                     intervals #> 11    2  6                                               empty_intervals #> 9     3  2                             one more sentence        sentence #>    tier_type id_ tier_ref event_local_id dependent_on time_start time_end #> 12     praat   1     <NA>             a1         <NA>      0.000    0.012 #> 13     praat   7     <NA>             a7         <NA>      0.000    0.012 #> 14     praat   2     <NA>             a2         <NA>      0.012    0.248 #> 1      praat   8     <NA>             a8         <NA>      0.012    0.248 #> 8      praat  13     <NA>            a13         <NA>      0.017    9.376 #> 2      praat   3     <NA>             a3         <NA>      0.248    0.396 #> 3      praat   9     <NA>             a9         <NA>      0.248    0.396 #> 4      praat   4     <NA>             a4         <NA>      0.396    0.512 #> 5      praat  10     <NA>            a10         <NA>      0.396    0.512 #> 6      praat   5     <NA>             a5         <NA>      0.512    0.652 #> 7      praat  11     <NA>            a11         <NA>      0.512    0.652 #> 10     praat   6     <NA>             a6         <NA>      0.652  300.000 #> 11     praat  12     <NA>            a12         <NA>      0.652  300.000 #> 9      praat  14     <NA>            a14         <NA>     11.690   26.461 #>      source media_url #> 12 test.eaf      <NA> #> 13 test.eaf      <NA> #> 14 test.eaf      <NA> #> 1  test.eaf      <NA> #> 8  test.eaf      <NA> #> 2  test.eaf      <NA> #> 3  test.eaf      <NA> #> 4  test.eaf      <NA> #> 5  test.eaf      <NA> #> 6  test.eaf      <NA> #> 7  test.eaf      <NA> #> 10 test.eaf      <NA> #> 11 test.eaf      <NA> #> 9  test.eaf      <NA>"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/remove_textgrid_tier.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove tier from texgrid — remove_textgrid_tier","title":"Remove tier from texgrid — remove_textgrid_tier","text":"Remove tier texgrid","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/remove_textgrid_tier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove tier from texgrid — remove_textgrid_tier","text":"","code":"remove_textgrid_tier(textgrid, tier, overwrite = TRUE)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/remove_textgrid_tier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove tier from texgrid — remove_textgrid_tier","text":"textgrid character filename path TextGrid tier value either ordinal number tier either name tier overwrite logical. TRUE (dafault) overwrites existing tier.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/remove_textgrid_tier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove tier from texgrid — remove_textgrid_tier","text":"string contain TextGrid. argument write TRUE, output.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/rename_soundfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename soundfiles — rename_soundfiles","title":"Rename soundfiles — rename_soundfiles","text":"Rename soundfiles using template user.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/rename_soundfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename soundfiles — rename_soundfiles","text":"","code":"rename_soundfiles(   stimuli,   translations = NULL,   prefix = NULL,   suffix = NULL,   order = NULL,   missing = NULL,   path,   autonumbering = TRUE,   backup = TRUE,   logging = TRUE )"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/rename_soundfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename soundfiles — rename_soundfiles","text":"stimuli character vector stimuli translations character vector translations (optonal). values added stimuli new files' names result ...stimulus_translation.... prefix character vector length one containing prefix file names suffix character vector length one containing suffix file names order numeric vector define order stimuli. default order stimuli taken. missing numeric vector define missing stimuli case stimuli recorded. path path directory soundfiles. autonumbering logical. TRUE, function creates automatic numbering files. backup logical. TRUE, function creates backup folder files. default TRUE. logging logical. TRUE creates .csv file correspondences old names new names. useful restoring case something goes wrong.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/rename_soundfiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename soundfiles — rename_soundfiles","text":"output","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/rename_soundfiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename soundfiles — rename_soundfiles","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/set_textgrid_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rewrite TextGrid names — set_textgrid_names","title":"Rewrite TextGrid names — set_textgrid_names","text":"Rewrite TextGrid names.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/set_textgrid_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rewrite TextGrid names — set_textgrid_names","text":"","code":"set_textgrid_names(textgrid, tiers, names, write = TRUE)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/set_textgrid_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rewrite TextGrid names — set_textgrid_names","text":"textgrid path TextGrid tiers integer vector number tiers named names vector strings new names TextGrid tiers write logical. TRUE (dafault) overwrites existing tier","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/set_textgrid_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rewrite TextGrid names — set_textgrid_names","text":"string contain TextGrid. argument write TRUE, output.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/set_textgrid_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rewrite TextGrid names — set_textgrid_names","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/set_textgrid_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rewrite TextGrid names — set_textgrid_names","text":"","code":"set_textgrid_names(system.file(\"extdata\", \"test.TextGrid\",   package = \"phonfieldwork\" ), tiers = 3, names = \"new_name\", write = FALSE ) #>  [1] \"File type = \\\"ooTextFile\\\"\"                 #>  [2] \"Object class = \\\"TextGrid\\\"\"                #>  [3] \"\"                                           #>  [4] \"xmin = 0 \"                                  #>  [5] \"xmax = 0.6526757369614512 \"                 #>  [6] \"tiers? <exists> \"                           #>  [7] \"size = 3 \"                                  #>  [8] \"item []: \"                                  #>  [9] \"    item [1]:\"                              #> [10] \"        class = \\\"IntervalTier\\\" \"          #> [11] \"        name = \\\"intervals\\\" \"              #> [12] \"        xmin = 0 \"                          #> [13] \"        xmax = 0.6526757369614512 \"         #> [14] \"        intervals: size = 5 \"               #> [15] \"        intervals [1]:\"                     #> [16] \"            xmin = 0 \"                      #> [17] \"            xmax = 0.012465825768947203 \"   #> [18] \"            text = \\\"\\\" \"                   #> [19] \"        intervals [2]:\"                     #> [20] \"            xmin = 0.012465825768947203 \"   #> [21] \"            xmax = 0.247819135106803 \"      #> [22] \"            text = \\\"t\\\" \"                  #> [23] \"        intervals [3]:\"                     #> [24] \"            xmin = 0.247819135106803 \"      #> [25] \"            xmax = 0.39552362579469874 \"    #> [26] \"            text = \\\"e\\\" \"                  #> [27] \"        intervals [4]:\"                     #> [28] \"            xmin = 0.39552362579469874 \"    #> [29] \"            xmax = 0.5115771541923311 \"     #> [30] \"            text = \\\"s\\\" \"                  #> [31] \"        intervals [5]:\"                     #> [32] \"            xmin = 0.5115771541923311 \"     #> [33] \"            xmax = 0.6526757369614512 \"     #> [34] \"            text = \\\"t\\\" \"                  #> [35] \"    item [2]:\"                              #> [36] \"        class = \\\"IntervalTier\\\" \"          #> [37] \"        name = \\\"empty_intervals\\\" \"        #> [38] \"        xmin = 0 \"                          #> [39] \"        xmax = 0.6526757369614512 \"         #> [40] \"        intervals: size = 5 \"               #> [41] \"        intervals [1]:\"                     #> [42] \"            xmin = 0 \"                      #> [43] \"            xmax = 0.012465825768947203 \"   #> [44] \"            text = \\\"\\\" \"                   #> [45] \"        intervals [2]:\"                     #> [46] \"            xmin = 0.012465825768947203 \"   #> [47] \"            xmax = 0.247819135106803 \"      #> [48] \"            text = \\\"\\\" \"                   #> [49] \"        intervals [3]:\"                     #> [50] \"            xmin = 0.247819135106803 \"      #> [51] \"            xmax = 0.39552362579469874 \"    #> [52] \"            text = \\\"\\\" \"                   #> [53] \"        intervals [4]:\"                     #> [54] \"            xmin = 0.39552362579469874 \"    #> [55] \"            xmax = 0.5115771541923311 \"     #> [56] \"            text = \\\"\\\" \"                   #> [57] \"        intervals [5]:\"                     #> [58] \"            xmin = 0.5115771541923311 \"     #> [59] \"            xmax = 0.6526757369614512 \"     #> [60] \"            text = \\\"\\\" \"                   #> [61] \"    item [3]:\"                              #> [62] \"        class = \\\"TextTier\\\" \"              #> [63] \"        name = \\\"new_name\\\"\"                #> [64] \"        xmin = 0 \"                          #> [65] \"        xmax = 0.6526757369614512 \"         #> [66] \"        points: size = 4 \"                  #> [67] \"        points [1]:\"                        #> [68] \"            number = 0.012465825768947203 \" #> [69] \"            mark = \\\"t\\\" \"                  #> [70] \"        points [2]:\"                        #> [71] \"            number = 0.247819135106803 \"    #> [72] \"            mark = \\\"e\\\" \"                  #> [73] \"        points [3]:\"                        #> [74] \"            number = 0.39552362579469874 \"  #> [75] \"            mark = \\\"s\\\" \"                  #> [76] \"        points [4]:\"                        #> [77] \"            number = 0.5115771541923311 \"   #> [78] \"            mark = \\\"t\\\" \""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/srt_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtitles .srt file to dataframe — srt_to_df","title":"Subtitles .srt file to dataframe — srt_to_df","text":"Convert subtitles .srt file dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/srt_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtitles .srt file to dataframe — srt_to_df","text":"","code":"srt_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/srt_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtitles .srt file to dataframe — srt_to_df","text":"file_name string filename path .srt file","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/srt_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtitles .srt file to dataframe — srt_to_df","text":"dataframe columns:  id, content, time_start, time_end, source.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/srt_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Subtitles .srt file to dataframe — srt_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/srt_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtitles .srt file to dataframe — srt_to_df","text":"","code":"srt_to_df(system.file(\"extdata\", \"test.srt\", package = \"phonfieldwork\")) #>   id content time_start time_end   source #> 0  1       t      0.013    0.248 test.srt #> 1  2       e      0.248    0.396 test.srt #> 2  3       s      0.396    0.512 test.srt #> 3  4       t      0.512    0.653 test.srt"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/textgrid_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"TextGrid to dataframe — textgrid_to_df","title":"TextGrid to dataframe — textgrid_to_df","text":"Convert Praat TextGrid dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/textgrid_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TextGrid to dataframe — textgrid_to_df","text":"","code":"textgrid_to_df(file_name)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/textgrid_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextGrid to dataframe — textgrid_to_df","text":"file_name string filename path TextGrid","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/textgrid_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TextGrid to dataframe — textgrid_to_df","text":"dataframe columns:  id, time_start, time_end (interval tier -- start value), content, tier, tier_name source","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/textgrid_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TextGrid to dataframe — textgrid_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/textgrid_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TextGrid to dataframe — textgrid_to_df","text":"","code":"textgrid_to_df(system.file(\"extdata\", \"test.TextGrid\",   package = \"phonfieldwork\" )) #>    id time_start   time_end content tier       tier_name        source #> 1   1 0.00000000 0.01246583            1       intervals test.TextGrid #> 6   1 0.00000000 0.01246583            2 empty_intervals test.TextGrid #> 2   2 0.01246583 0.24781914       t    1       intervals test.TextGrid #> 7   2 0.01246583 0.24781914            2 empty_intervals test.TextGrid #> 11  1 0.01246583 0.01246583       t    3          points test.TextGrid #> 3   3 0.24781914 0.39552363       e    1       intervals test.TextGrid #> 8   3 0.24781914 0.39552363            2 empty_intervals test.TextGrid #> 12  2 0.24781914 0.24781914       e    3          points test.TextGrid #> 4   4 0.39552363 0.51157715       s    1       intervals test.TextGrid #> 9   4 0.39552363 0.51157715            2 empty_intervals test.TextGrid #> 13  3 0.39552363 0.39552363       s    3          points test.TextGrid #> 5   5 0.51157715 0.65267574       t    1       intervals test.TextGrid #> 10  5 0.51157715 0.65267574            2 empty_intervals test.TextGrid #> 14  4 0.51157715 0.51157715       t    3          points test.TextGrid  # this is and example of reading a short .TextGrid format textgrid_to_df(system.file(\"extdata\", \"test_short.TextGrid\",   package = \"phonfieldwork\" )) #>    id time_start   time_end content tier       tier_name              source #> 1   1 0.00000000 0.01246583            1       intervals test_short.TextGrid #> 6   1 0.00000000 0.01246583            2 empty_intervals test_short.TextGrid #> 2   2 0.01246583 0.24781914       t    1       intervals test_short.TextGrid #> 7   2 0.01246583 0.24781914            2 empty_intervals test_short.TextGrid #> 11  1 0.01246583 0.01246583       t    3          points test_short.TextGrid #> 3   3 0.24781914 0.39552363       e    1       intervals test_short.TextGrid #> 8   3 0.24781914 0.39552363            2 empty_intervals test_short.TextGrid #> 12  2 0.24781914 0.24781914       e    3          points test_short.TextGrid #> 4   4 0.39552363 0.51157715       s    1       intervals test_short.TextGrid #> 9   4 0.39552363 0.51157715            2 empty_intervals test_short.TextGrid #> 13  3 0.39552363 0.39552363       s    3          points test_short.TextGrid #> 5   5 0.51157715 0.65267574       t    1       intervals test_short.TextGrid #> 10  5 0.51157715 0.65267574            2 empty_intervals test_short.TextGrid #> 14  4 0.51157715 0.51157715       t    3          points test_short.TextGrid"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/tier_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"TextGrid's tier to dataframe — tier_to_df","title":"TextGrid's tier to dataframe — tier_to_df","text":"Convert selected tier Praat TextGrid dataframe.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/tier_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TextGrid's tier to dataframe — tier_to_df","text":"","code":"tier_to_df(file_name, tier = 1)"},{"path":"https://docs.ropensci.org/phonfieldwork/reference/tier_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextGrid's tier to dataframe — tier_to_df","text":"file_name string filename path TextGrid tier value either ordinal number tier either name tier. default '1'.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/tier_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TextGrid's tier to dataframe — tier_to_df","text":"dataframe columns:  id, time_start, time_end, content, , tier_name","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/tier_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TextGrid's tier to dataframe — tier_to_df","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/reference/tier_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TextGrid's tier to dataframe — tier_to_df","text":"","code":"tier_to_df(system.file(\"extdata\", \"test.TextGrid\",   package = \"phonfieldwork\" )) #>   id time_start   time_end content tier tier_name        source #> 1  1 0.00000000 0.01246583            1 intervals test.TextGrid #> 2  2 0.01246583 0.24781914       t    1 intervals test.TextGrid #> 3  3 0.24781914 0.39552363       e    1 intervals test.TextGrid #> 4  4 0.39552363 0.51157715       s    1 intervals test.TextGrid #> 5  5 0.51157715 0.65267574       t    1 intervals test.TextGrid tier_to_df(   system.file(\"extdata\", \"test.TextGrid\",     package = \"phonfieldwork\"   ),   \"intervals\" ) #>   id time_start   time_end content tier tier_name        source #> 1  1 0.00000000 0.01246583            1 intervals test.TextGrid #> 2  2 0.01246583 0.24781914       t    1 intervals test.TextGrid #> 3  3 0.24781914 0.39552363       e    1 intervals test.TextGrid #> 4  4 0.39552363 0.51157715       s    1 intervals test.TextGrid #> 5  5 0.51157715 0.65267574       t    1 intervals test.TextGrid"},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-0012","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.12","title":"phonfieldwork 0.0.12","text":"add separate_duration argument concatenate_soundfiles() function makes possible use silent separator file concatenation. make rename_soundfiles() function work mp3 files. fix bug \" sign textgrids. make pictures optional create_viewer() function add df_to_exb() function; thanks Valeria Buntiakova #43","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-0011","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.11","title":"phonfieldwork 0.0.11","text":"CRAN release: 2021-03-02 correct empty tiers behavior #34 (thanks Shungo Suzuki) add possibility different values n_of_annotations argument create_subannotation() (thanks Jenya Korovina idea) rename tier argument create_empty_textgrid() tier_name. create remove_textgrid_tier() function.","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-0010","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.10","title":"phonfieldwork 0.0.10","text":"CRAN release: 2020-11-23 add tryCatch read_from_folder() function","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-008","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.8","title":"phonfieldwork 0.0.8","text":"CRAN release: 2020-10-25 add possibility read short format .TextGrids fix textgrid_to_df() tier_to_df() functions add encoding, formant_df, intensity, picth pitch_range arguments draw_sound() function add formant_to_df() function add picth_to_df() function add intensity_to_df() function add argument external create_presentation() function order mark external images gifs remove encoding arguments replace encoding autodetection uchardet (thanks Artem Klevtsov help) add autonumber, loging missing arguments rename_soundfiles() function (thanks Niko Partanen) lot minor style changes (thanks Jonathan Keane) add create_empty_textgrid() function (thanks Niko Partanen) add data_manipulation_with_tidyverse vignette (thanks Niko Partanen) add concatenate_textgrids() function add read_from_folder() function remove ..._from_folder arguments pass rOpenSci review! Move tutorial https://ropensci.github.io/phonfieldwork/","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-007","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.7","title":"phonfieldwork 0.0.7","text":"CRAN release: 2020-07-10 add vigniettes ethical research introduction work phonfieldwork add argument textgrids_from_folder textgrid_to_df() function add argument exbs_from_folder exb_to_df() function add argument eafs_from_folder eaf_to_df() function add Raven style annotations8 replace freqmax frequency_range argument replace example_textgrid systemfile() call add window annotation spectrograms add bridge lingtypology package: map argument create_viewer() function make possible visualise types annotations draw_sound() function add source column ..._to_df() functions add audacity_to_df function add srt_to_df function chage textgrid related functions’ output start, end, annotation time_start, time_end, content correct point tier visualization","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-006","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.6","title":"phonfieldwork 0.0.6","text":"CRAN release: 2020-06-20 add encoding arguments functions working TextGrids add textgrid argument draw_sound() function change subgraphs alignment draw_sound() function including textgrid annotation add arguments draw_sound() function add .mp3 format reading options functions work sounds add text_size argument draw_sound() function add zoom`` argument thedraw_sound()` function add get_sound_duration() function fix ploting multiple sounds multiple .TextGrids add argument title_as_filename draw_sound() function change .TextGrid associated arguments create_viewer() function table argument; result users now need provide table annotation viewer .TextGrid","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-005","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.5","title":"phonfieldwork 0.0.5","text":"CRAN release: 2020-06-07 add textgrid_to_df() function reading Praat files add create_glossed_document() function converting .flextext files glossed document add flextext_to_df() function reading FLEx files add eaf_to_df() function reading ELAN files add exb_to_df() function reading EXMARaLDA files rename textgrid argument annotation argument concatenate_soundfiles() function adding new possible values","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-004","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.4","title":"phonfieldwork 0.0.4","text":"CRAN release: 2020-05-23 add create_subannotation() function","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-003","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.3","title":"phonfieldwork 0.0.3","text":"CRAN release: 2020-01-07 vertically horisontally center text presentations created create_presentation(); thx @Pandaklez #1 add font_size argument create_presentation() function add rename_videofiles() function rebuild html viewer sounds JavaScript help new functions create_image_look_up() create_sound_play().","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-002","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.2","title":"phonfieldwork 0.0.2","text":"CRAN release: 2019-09-23 make create_presentation() function render silently add new function draw_sound() creating spectrogram oscilogram add new function create_viewer() creating html viewer sound spectrograms correct work autonumbering function extract_intervals() function add new functions get_textgrid_names() set_textgrid_names() finish tutorial https://ropensci.github.io/phonfieldwork/","code":""},{"path":"https://docs.ropensci.org/phonfieldwork/news/index.html","id":"phonfieldwork-001","dir":"Changelog","previous_headings":"","what":"phonfieldwork 0.0.1","title":"phonfieldwork 0.0.1","text":"CRAN release: 2019-08-24 initial release","code":""}]
